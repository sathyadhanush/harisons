{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"appearance\", \"className\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useStyleConfig } from '../../hooks';\nimport Text from './Text';\nvar pseudoSelectors = {};\nvar internalStyles = {};\nvar Code = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Code(props, ref) {\n  var _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      className = props.className,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var styleProps = useStyleConfig('Code', {\n    appearance: appearance\n  }, pseudoSelectors, internalStyles);\n  return /*#__PURE__*/React.createElement(Text, _extends({\n    is: \"code\",\n    ref: ref\n  }, styleProps, {\n    fontFamily: \"mono\",\n    className: className\n  }, restProps));\n}));\nCode.propTypes = _objectSpread(_objectSpread({}, Text.propTypes), {}, {\n  /**\n   * The appearance of the code.\n   */\n  appearance: PropTypes.oneOf(['default', 'minimal']),\n\n  /**\n   * Class name passed to the Code component.\n   * Only use if you know what you are doing.\n   */\n  className: PropTypes.string\n});\nexport default Code;","map":{"version":3,"sources":["../../../src/typography/src/Code.js"],"names":["pseudoSelectors","internalStyles","Code","memo","forwardRef","appearance","className","restProps","props","styleProps","useStyleConfig","ref","Text","PropTypes","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,UAAA,EAAA,IAAA,QAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,SAAA,cAAA,QAAA,aAAA;AACA,OAAA,IAAA,MAAA,QAAA;AAEA,IAAMA,eAAe,GAArB,EAAA;AACA,IAAMC,cAAc,GAApB,EAAA;AAEA,IAAMC,IAAI,GAAA,aAAGC,IAAI,EAAA,aACfC,UAAU,CAAC,SAAA,IAAA,CAAA,KAAA,EAAA,GAAA,EAA0B;AACnC,MAAA,iBAAA,GAA4DI,KAA5D,CAAA,UAAA;AAAA,MAAQH,UAAR,GAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,SAAA,GAAA,iBAAA;AAAA,MAAgCC,SAAhC,GAA4DE,KAA5D,CAAA,SAAA;AAAA,MAA8CD,SAA9C,GAAA,wBAAA,CAAA,KAAA,EAAA,SAAA,CAAA;;AAEA,MAAME,UAAU,GAAGC,cAAc,CAAA,MAAA,EAAS;AAAEL,IAAAA,UAAU,EAAVA;AAAF,GAAT,EAAA,eAAA,EAAjC,cAAiC,CAAjC;AAEA,SAAA,aAAO,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AAAM,IAAA,EAAE,EAAR,MAAA;AAAgB,IAAA,GAAG,EAAEM;AAArB,GAAA,EAAA,UAAA,EAAA;AAA0C,IAAA,UAAU,EAApD,MAAA;AAA4D,IAAA,SAAS,EAAEL;AAAvE,GAAA,EAAP,SAAO,CAAA,CAAP;AANJ,CACY,CADK,CAAjB;AAUAJ,IAAI,CAAJA,SAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKU,IAAI,CADTV,SAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAGE;AACF;AACA;AACEG,EAAAA,UAAU,EAAEQ,SAAS,CAATA,KAAAA,CAAgB,CAAA,SAAA,EAN9BX,SAM8B,CAAhBW,CANdX;;AAQE;AACF;AACA;AACA;AACEI,EAAAA,SAAS,EAAEO,SAAS,CAACC;AAZvBZ,CAAAA,CAAAA;AAeA,eAAA,IAAA","sourcesContent":["import React, { forwardRef, memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useStyleConfig } from '../../hooks'\nimport Text from './Text'\n\nconst pseudoSelectors = {}\nconst internalStyles = {}\n\nconst Code = memo(\n  forwardRef(function Code(props, ref) {\n    const { appearance = 'default', className, ...restProps } = props\n\n    const styleProps = useStyleConfig('Code', { appearance }, pseudoSelectors, internalStyles)\n\n    return <Text is=\"code\" ref={ref} {...styleProps} fontFamily=\"mono\" className={className} {...restProps} />\n  })\n)\n\nCode.propTypes = {\n  ...Text.propTypes,\n\n  /**\n   * The appearance of the code.\n   */\n  appearance: PropTypes.oneOf(['default', 'minimal']),\n\n  /**\n   * Class name passed to the Code component.\n   * Only use if you know what you are doing.\n   */\n  className: PropTypes.string\n}\n\nexport default Code\n"]},"metadata":{},"sourceType":"module"}