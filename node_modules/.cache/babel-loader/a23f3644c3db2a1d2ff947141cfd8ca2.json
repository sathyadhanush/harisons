{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\"];\nimport React, { memo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useClickable, useStyleConfig } from '../../hooks';\nimport { TickIcon } from '../../icons';\nimport { Pane } from '../../layers';\nimport { pseudoSelectors } from '../../table/src/TableRow';\nimport { Text } from '../../typography';\n\nvar noop = function noop() {};\n\nvar internalStyles = {\n  display: 'flex',\n  alignItems: 'center'\n};\nvar MenuOption = /*#__PURE__*/memo(function MenuOption(props) {\n  var id = props.id,\n      children = props.children,\n      _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      _props$onSelect = props.onSelect,\n      onSelect = _props$onSelect === void 0 ? noop : _props$onSelect,\n      secondaryText = props.secondaryText,\n      _props$isSelected = props.isSelected,\n      isSelected = _props$isSelected === void 0 ? false : _props$isSelected;\n  var handleClick = useCallback(function (e) {\n    return onSelect(e);\n  }, [onSelect]);\n\n  var _useClickable = useClickable(),\n      onKeyDown = _useClickable.onKeyDown,\n      tabIndex = _useClickable.tabIndex;\n\n  var _useStyleConfig = useStyleConfig('MenuItem', {\n    appearance: appearance\n  }, pseudoSelectors, internalStyles),\n      themedClassName = _useStyleConfig.className,\n      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded);\n\n  var textProps = isSelected ? {\n    color: 'selected',\n    fontWeight: 500,\n    marginLeft: 16\n  } : {\n    marginLeft: 44\n  };\n  return /*#__PURE__*/React.createElement(Pane, _extends({\n    id: id,\n    role: \"menuitemradio\",\n    tabIndex: tabIndex,\n    className: themedClassName,\n    onClick: handleClick,\n    onKeyDown: onKeyDown,\n    \"data-isselectable\": \"true\",\n    \"aria-checked\": isSelected,\n    height: 40\n  }, boxProps), isSelected && /*#__PURE__*/React.createElement(TickIcon, {\n    \"aria-hidden\": true,\n    color: \"selected\",\n    marginLeft: 16,\n    marginRight: -4,\n    size: 16,\n    flexShrink: 0\n  }), /*#__PURE__*/React.createElement(Text, _extends({}, textProps, {\n    marginRight: 16,\n    flex: 1\n  }), children), secondaryText && /*#__PURE__*/React.createElement(Text, {\n    marginRight: 16,\n    color: \"muted\"\n  }, secondaryText));\n});\nMenuOption.propTypes = {\n  /**\n   * The id attribute of the menu option.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Function that is called on click and enter/space keypress.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * The icon before the label.\n   */\n  isSelected: PropTypes.bool,\n\n  /**\n   * The children of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Secondary text shown on the right.\n   */\n  secondaryText: PropTypes.node,\n\n  /**\n   * The default theme only supports one default appearance.\n   */\n  appearance: PropTypes.string\n};\nexport default MenuOption;","map":{"version":3,"sources":["../../../src/menu/src/MenuOption.js"],"names":["noop","internalStyles","display","alignItems","MenuOption","memo","id","children","appearance","onSelect","secondaryText","isSelected","props","handleClick","useCallback","onKeyDown","tabIndex","useClickable","themedClassName","boxProps","useStyleConfig","textProps","color","fontWeight","marginLeft","PropTypes","string"],"mappings":"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","sourcesContent":["import React, { memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useClickable, useStyleConfig } from '../../hooks'\nimport { TickIcon } from '../../icons'\nimport { Pane } from '../../layers'\nimport { pseudoSelectors } from '../../table/src/TableRow'\nimport { Text } from '../../typography'\n\nconst noop = () => {}\n\nconst internalStyles = {\n  display: 'flex',\n  alignItems: 'center'\n}\n\nconst MenuOption = memo(function MenuOption(props) {\n  const { id, children, appearance = 'default', onSelect = noop, secondaryText, isSelected = false } = props\n\n  const handleClick = useCallback(e => onSelect(e), [onSelect])\n\n  const { onKeyDown, tabIndex } = useClickable()\n\n  const { className: themedClassName, ...boxProps } = useStyleConfig(\n    'MenuItem',\n    { appearance },\n    pseudoSelectors,\n    internalStyles\n  )\n\n  const textProps = isSelected\n    ? {\n        color: 'selected',\n        fontWeight: 500,\n        marginLeft: 16\n      }\n    : { marginLeft: 44 }\n\n  return (\n    <Pane\n      id={id}\n      role=\"menuitemradio\"\n      tabIndex={tabIndex}\n      className={themedClassName}\n      onClick={handleClick}\n      onKeyDown={onKeyDown}\n      data-isselectable=\"true\"\n      aria-checked={isSelected}\n      height={40}\n      {...boxProps}\n    >\n      {isSelected && (\n        <TickIcon aria-hidden color=\"selected\" marginLeft={16} marginRight={-4} size={16} flexShrink={0} />\n      )}\n      <Text {...textProps} marginRight={16} flex={1}>\n        {children}\n      </Text>\n      {secondaryText && (\n        <Text marginRight={16} color=\"muted\">\n          {secondaryText}\n        </Text>\n      )}\n    </Pane>\n  )\n})\n\nMenuOption.propTypes = {\n  /**\n   * The id attribute of the menu option.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Function that is called on click and enter/space keypress.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * The icon before the label.\n   */\n  isSelected: PropTypes.bool,\n\n  /**\n   * The children of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Secondary text shown on the right.\n   */\n  secondaryText: PropTypes.node,\n\n  /**\n   * The default theme only supports one default appearance.\n   */\n  appearance: PropTypes.string\n}\n\nexport default MenuOption\n"]},"metadata":{},"sourceType":"module"}