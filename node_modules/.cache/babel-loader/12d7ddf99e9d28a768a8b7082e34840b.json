{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"appearance\", \"children\", \"className\", \"color\", \"disabled\", \"iconAfter\", \"iconBefore\", \"intent\", \"is\", \"isActive\", \"isLoading\"],\n    _excluded2 = [\"className\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Box, { spacing, dimensions, position, layout } from 'ui-box';\nimport { useStyleConfig } from '../../hooks';\nimport { IconWrapper } from '../../icons/src/IconWrapper';\nimport { getTextPropsForControlHeight } from '../../lib/deprecated-theme-helpers';\nimport { Spinner } from '../../spinner';\n/* eslint-disable react/prop-types */\n\nvar ButtonIcon = /*#__PURE__*/memo(function ButtonIcon(_ref) {\n  var edge = _ref.edge,\n      icon = _ref.icon,\n      size = _ref.size,\n      spacing = _ref.spacing;\n  if (!icon) return null;\n  var relativeSpace = typeof spacing === 'number' ? spacing : size;\n  var edgeMargin = -Math.round(relativeSpace * 0.25);\n  var innerMargin = Math.round(size * 0.7);\n  var marginLeft = edge === 'start' ? edgeMargin : innerMargin;\n  var marginRight = edge === 'end' ? edgeMargin : innerMargin;\n  return /*#__PURE__*/React.createElement(IconWrapper, {\n    icon: icon,\n    size: size,\n    marginLeft: marginLeft,\n    marginRight: marginRight\n  });\n});\n/* eslint-enable react/prop-types */\n\nexport var internalStyles = {\n  position: 'relative',\n  fontWeight: 500,\n  display: 'inline-flex',\n  alignItems: 'center',\n  flexWrap: 'nowrap',\n  justifyContent: 'center',\n  textDecoration: 'none',\n  verticalAlign: 'middle',\n  border: 'none',\n  outline: 'none',\n  userSelect: 'none',\n  cursor: 'pointer',\n  whiteSpace: 'nowrap',\n  WebkitFontSmoothing: 'antialiased',\n  WebkitAppearance: 'none',\n  MozAppearance: 'none',\n  '&::-moz-focus-inner ': {\n    border: 0\n  }\n};\nexport var pseudoSelectors = {\n  _active: '&:not([disabled]):active, &:not([disabled])[aria-expanded=\"true\"], &:not([disabled])[data-active]',\n  _disabled: '&[disabled]',\n  _focus: '&:not([disabled]):focus',\n  _focusAndActive: '&:not([disabled]):focus:active, &:not([disabled])[aria-expanded=\"true\"]:focus, &:not([disabled])[data-active]:focus',\n  _hover: '&:not([disabled]):hover'\n};\nexport var getIconSizeForButton = function getIconSizeForButton(height) {\n  if (height <= 28) return 12;\n  if (height <= 32) return 14;\n  if (height <= 40) return 16;\n  if (height <= 48) return 18;\n  return 20;\n};\nvar Button = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Button(props, ref) {\n  var _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      disabled = props.disabled,\n      iconAfter = props.iconAfter,\n      iconBefore = props.iconBefore,\n      _props$intent = props.intent,\n      intent = _props$intent === void 0 ? 'none' : _props$intent,\n      _props$is = props.is,\n      is = _props$is === void 0 ? 'button' : _props$is,\n      _props$isActive = props.isActive,\n      isActive = _props$isActive === void 0 ? false : _props$isActive,\n      isLoading = props.isLoading,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var _useStyleConfig = useStyleConfig('Button', {\n    appearance: appearance,\n    color: color,\n    intent: intent,\n    size: restProps.size || 'medium'\n  }, pseudoSelectors, internalStyles),\n      themedClassName = _useStyleConfig.className,\n      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  var height = restProps.height || boxProps.height; // Keep backwards compat font sizing if an explicit height was passed in.\n\n  var textProps = !restProps.size && restProps.height ? getTextPropsForControlHeight(restProps.height) : {};\n  var iconSize = getIconSizeForButton(height);\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    is: is,\n    ref: ref,\n    className: cx(themedClassName, className),\n    \"data-active\": isActive || undefined\n  }, boxProps, restProps, textProps, {\n    disabled: disabled || isLoading\n  }), isLoading && /*#__PURE__*/React.createElement(Spinner, {\n    marginLeft: -Math.round(height / 8),\n    marginRight: Math.round(height / 4),\n    size: Math.round(height / 2)\n  }), /*#__PURE__*/React.createElement(ButtonIcon, {\n    icon: iconBefore,\n    size: iconSize,\n    spacing: restProps.paddingLeft,\n    edge: \"start\"\n  }), children, /*#__PURE__*/React.createElement(ButtonIcon, {\n    icon: iconAfter,\n    size: iconSize,\n    spacing: restProps.paddingRight,\n    edge: \"end\"\n  }));\n}));\nButton.propTypes = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, dimensions.propTypes), spacing.propTypes), position.propTypes), layout.propTypes), {}, {\n  /**\n   * The intent of the button.\n   */\n  intent: PropTypes.string,\n\n  /**\n   * The appearance of the button.\n   */\n  appearance: PropTypes.string,\n\n  /**\n   * The size of the button\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * When true, show a loading spinner before the children.\n   * This also disables the button.\n   */\n  isLoading: PropTypes.bool,\n\n  /**\n   * Forcefully set the active state of a button.\n   * Useful in conjunction with a Popover.\n   */\n  isActive: PropTypes.bool,\n\n  /**\n   * Sets an icon before the text. Can be any icon from Evergreen or a custom element.\n   */\n  iconBefore: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n\n  /**\n   * Sets an icon after the text. Can be any icon from Evergreen or a custom element.\n   */\n  iconAfter: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n\n  /**\n   * When true, the button is disabled.\n   * isLoading also sets the button to disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Class name passed to the button.\n   * Only use if you know what you are doing.\n   */\n  className: PropTypes.string\n});\nexport default Button;","map":{"version":3,"sources":["../../../src/buttons/src/Button.js"],"names":["ButtonIcon","memo","edge","icon","size","spacing","relativeSpace","edgeMargin","Math","innerMargin","marginLeft","marginRight","internalStyles","position","fontWeight","display","alignItems","flexWrap","justifyContent","textDecoration","verticalAlign","border","outline","userSelect","cursor","whiteSpace","WebkitFontSmoothing","WebkitAppearance","MozAppearance","pseudoSelectors","_active","_disabled","_focus","_focusAndActive","_hover","getIconSizeForButton","height","Button","forwardRef","appearance","children","className","color","disabled","iconAfter","iconBefore","intent","is","isActive","isLoading","restProps","props","themedClassName","boxProps","useStyleConfig","textProps","getTextPropsForControlHeight","iconSize","cx","undefined","dimensions","layout","PropTypes","string"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport Box, { spacing, dimensions, position, layout } from 'ui-box'\nimport { useStyleConfig } from '../../hooks'\nimport { IconWrapper } from '../../icons/src/IconWrapper'\nimport { getTextPropsForControlHeight } from '../../lib/deprecated-theme-helpers'\nimport { Spinner } from '../../spinner'\n\n/* eslint-disable react/prop-types */\nconst ButtonIcon = memo(function ButtonIcon({ edge, icon, size, spacing }) {\n  if (!icon) return null\n\n  const relativeSpace = typeof spacing === 'number' ? spacing : size\n  const edgeMargin = -Math.round(relativeSpace * 0.25)\n  const innerMargin = Math.round(size * 0.7)\n  const marginLeft = edge === 'start' ? edgeMargin : innerMargin\n  const marginRight = edge === 'end' ? edgeMargin : innerMargin\n\n  return <IconWrapper icon={icon} size={size} marginLeft={marginLeft} marginRight={marginRight} />\n})\n/* eslint-enable react/prop-types */\n\nexport const internalStyles = {\n  position: 'relative',\n  fontWeight: 500,\n  display: 'inline-flex',\n  alignItems: 'center',\n  flexWrap: 'nowrap',\n  justifyContent: 'center',\n  textDecoration: 'none',\n  verticalAlign: 'middle',\n  border: 'none',\n  outline: 'none',\n  userSelect: 'none',\n  cursor: 'pointer',\n  whiteSpace: 'nowrap',\n  WebkitFontSmoothing: 'antialiased',\n  WebkitAppearance: 'none',\n  MozAppearance: 'none',\n  '&::-moz-focus-inner ': {\n    border: 0\n  }\n}\n\nexport const pseudoSelectors = {\n  _active: '&:not([disabled]):active, &:not([disabled])[aria-expanded=\"true\"], &:not([disabled])[data-active]',\n  _disabled: '&[disabled]',\n  _focus: '&:not([disabled]):focus',\n  _focusAndActive:\n    '&:not([disabled]):focus:active, &:not([disabled])[aria-expanded=\"true\"]:focus, &:not([disabled])[data-active]:focus',\n  _hover: '&:not([disabled]):hover'\n}\n\nexport const getIconSizeForButton = height => {\n  if (height <= 28) return 12\n  if (height <= 32) return 14\n  if (height <= 40) return 16\n  if (height <= 48) return 18\n  return 20\n}\n\nconst Button = memo(\n  forwardRef(function Button(props, ref) {\n    const {\n      appearance = 'default',\n      children,\n      className,\n      color,\n      disabled,\n      iconAfter,\n      iconBefore,\n      intent = 'none',\n      is = 'button',\n      isActive = false,\n      isLoading,\n      ...restProps\n    } = props\n\n    const { className: themedClassName, ...boxProps } = useStyleConfig(\n      'Button',\n      { appearance, color, intent, size: restProps.size || 'medium' },\n      pseudoSelectors,\n      internalStyles\n    )\n\n    const height = restProps.height || boxProps.height\n    // Keep backwards compat font sizing if an explicit height was passed in.\n    const textProps = !restProps.size && restProps.height ? getTextPropsForControlHeight(restProps.height) : {}\n    const iconSize = getIconSizeForButton(height)\n\n    return (\n      <Box\n        is={is}\n        ref={ref}\n        className={cx(themedClassName, className)}\n        data-active={isActive || undefined}\n        {...boxProps}\n        {...restProps}\n        {...textProps}\n        disabled={disabled || isLoading}\n      >\n        {isLoading && (\n          <Spinner\n            marginLeft={-Math.round(height / 8)}\n            marginRight={Math.round(height / 4)}\n            size={Math.round(height / 2)}\n          />\n        )}\n        <ButtonIcon icon={iconBefore} size={iconSize} spacing={restProps.paddingLeft} edge=\"start\" />\n        {children}\n        <ButtonIcon icon={iconAfter} size={iconSize} spacing={restProps.paddingRight} edge=\"end\" />\n      </Box>\n    )\n  })\n)\n\nButton.propTypes = {\n  /**\n   * Composes the dimensions spec from the Box primitive.\n   */\n  ...dimensions.propTypes,\n\n  /**\n   * Composes the spacing spec from the Box primitive.\n   */\n  ...spacing.propTypes,\n\n  /**\n   * Composes the position spec from the Box primitive.\n   */\n  ...position.propTypes,\n\n  /**\n   * Composes the layout spec from the Box primitive.\n   */\n  ...layout.propTypes,\n\n  /**\n   * The intent of the button.\n   */\n  intent: PropTypes.string,\n\n  /**\n   * The appearance of the button.\n   */\n  appearance: PropTypes.string,\n\n  /**\n   * The size of the button\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * When true, show a loading spinner before the children.\n   * This also disables the button.\n   */\n  isLoading: PropTypes.bool,\n\n  /**\n   * Forcefully set the active state of a button.\n   * Useful in conjunction with a Popover.\n   */\n  isActive: PropTypes.bool,\n\n  /**\n   * Sets an icon before the text. Can be any icon from Evergreen or a custom element.\n   */\n  iconBefore: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n\n  /**\n   * Sets an icon after the text. Can be any icon from Evergreen or a custom element.\n   */\n  iconAfter: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n\n  /**\n   * When true, the button is disabled.\n   * isLoading also sets the button to disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Class name passed to the button.\n   * Only use if you know what you are doing.\n   */\n  className: PropTypes.string\n}\n\nexport default Button\n"]},"metadata":{},"sourceType":"module"}