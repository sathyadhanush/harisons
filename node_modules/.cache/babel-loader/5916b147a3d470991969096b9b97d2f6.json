{"ast":null,"code":"import hasValue from '../../../lib/has-value';\nimport mimeTypeToExtension from './mime-type-to-extension';\n/**\n * Returns the corresponding file extensions from the provided MimeTypes.\n *\n * Unlike `mimeTypeToExtension`, this will never return `undefined` values. MimeTypes\n * that aren't found are discarded.\n *\n * @param {string[]} mimeTypes\n * @returns {string[]} Mapped file extensions each MimeType\n */\n\nvar mimeTypesToExtensions = function mimeTypesToExtensions(mimeTypes) {\n  var extensions = mimeTypes.map(mimeTypeToExtension);\n  return extensions.filter(hasValue);\n};\n\nexport default mimeTypesToExtensions;","map":{"version":3,"sources":["../../../../src/file-uploader/src/utils/mime-types-to-extensions.js"],"names":["mimeTypesToExtensions","extensions","mimeTypes"],"mappings":"AAAA,OAAA,QAAA,MAAA,wBAAA;AACA,OAAA,mBAAA,MAAA,0BAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAA,SAAA,EAAa;AACzC,MAAMC,UAAU,GAAGC,SAAS,CAATA,GAAAA,CAAnB,mBAAmBA,CAAnB;AAEA,SAAOD,UAAU,CAAVA,MAAAA,CAAP,QAAOA,CAAP;AAHF,CAAA;;AAMA,eAAA,qBAAA","sourcesContent":["import hasValue from '../../../lib/has-value'\nimport mimeTypeToExtension from './mime-type-to-extension'\n\n/**\n * Returns the corresponding file extensions from the provided MimeTypes.\n *\n * Unlike `mimeTypeToExtension`, this will never return `undefined` values. MimeTypes\n * that aren't found are discarded.\n *\n * @param {string[]} mimeTypes\n * @returns {string[]} Mapped file extensions each MimeType\n */\nconst mimeTypesToExtensions = mimeTypes => {\n  const extensions = mimeTypes.map(mimeTypeToExtension)\n\n  return extensions.filter(hasValue)\n}\n\nexport default mimeTypesToExtensions\n"]},"metadata":{},"sourceType":"module"}