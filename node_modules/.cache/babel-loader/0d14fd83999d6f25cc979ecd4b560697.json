{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\", \"className\", \"size\"],\n    _excluded2 = [\"className\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { useStyleConfig } from '../../hooks';\nvar emptyObject = {};\nvar internalStyles = {\n  margin: 0,\n  marginLeft: '1.1em',\n  padding: 0,\n  listStyle: 'decimal'\n};\nvar OrderedList = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function OrderedList(props, ref) {\n  var children = props.children,\n      className = props.className,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 400 : _props$size,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useStyleConfig = useStyleConfig('List', {\n    size: size\n  }, emptyObject, internalStyles),\n      themedClassName = _useStyleConfig.className,\n      styleProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  var finalChildren = React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return child;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      // Prefer more granularly defined icon if present\n      size: child.props.size || size\n    });\n  });\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    is: \"ol\",\n    className: cx(className, themedClassName)\n  }, styleProps, rest, {\n    ref: ref\n  }), finalChildren);\n}));\nOrderedList.propTypes = _objectSpread(_objectSpread({}, Box.propTypes), {}, {\n  /**\n   * Size of the text used in a list item.\n   * Can be: 300, 400, 500, 600.\n   */\n  size: PropTypes.oneOf([300, 400, 500, 600])\n});\nexport default OrderedList;","map":{"version":3,"sources":["../../../src/typography/src/OrderedList.js"],"names":["emptyObject","internalStyles","margin","marginLeft","padding","listStyle","OrderedList","memo","forwardRef","children","className","size","rest","props","themedClassName","styleProps","useStyleConfig","finalChildren","React","child","cx","ref","Box","PropTypes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,OAAA,EAAA,MAAA,YAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,GAAA,MAAA,QAAA;AACA,SAAA,cAAA,QAAA,aAAA;AAEA,IAAMA,WAAW,GAAjB,EAAA;AAEA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EADe,CAAA;AAErBC,EAAAA,UAAU,EAFW,OAAA;AAGrBC,EAAAA,OAAO,EAHc,CAAA;AAIrBC,EAAAA,SAAS,EAAE;AAJU,CAAvB;AAOA,IAAMC,WAAW,GAAA,aAAGC,IAAI,EAAA,aACtBC,UAAU,CAAC,SAAA,WAAA,CAAA,KAAA,EAAA,GAAA,EAAiC;AAC1C,MAAQC,QAAR,GAAqDI,KAArD,CAAA,QAAA;AAAA,MAAkBH,SAAlB,GAAqDG,KAArD,CAAA,SAAA;AAAA,MAAA,WAAA,GAAqDA,KAArD,CAAA,IAAA;AAAA,MAA6BF,IAA7B,GAAA,WAAA,KAAA,KAAA,CAAA,GAAA,GAAA,GAAA,WAAA;AAAA,MAA4CC,IAA5C,GAAA,wBAAA,CAAA,KAAA,EAAA,SAAA,CAAA;;AAEA,MAAA,eAAA,GAAsDI,cAAc,CAAA,MAAA,EAAS;AAAEL,IAAAA,IAAI,EAAJA;AAAF,GAAT,EAAA,WAAA,EAApE,cAAoE,CAApE;AAAA,MAAmBG,eAAnB,GAAA,eAAA,CAAA,SAAA;AAAA,MAAuCC,UAAvC,GAAA,wBAAA,CAAA,eAAA,EAAA,UAAA,CAAA;;AAEA,MAAME,aAAa,GAAG,KAAK,CAAL,QAAA,CAAA,GAAA,CAAA,QAAA,EAA6B,UAAA,KAAA,EAAS;AAC1D,QAAI,EAAA,aAACC,KAAK,CAALA,cAAAA,CAAL,KAAKA,CAAL,EAAkC;AAChC,aAAA,KAAA;AACD;;AAED,WAAA,aAAO,KAAK,CAAL,YAAA,CAAA,KAAA,EAA0B;AAC/B;AACAP,MAAAA,IAAI,EAAEQ,KAAK,CAALA,KAAAA,CAAAA,IAAAA,IAAoBR;AAFK,KAA1B,CAAP;AALF,GAAsB,CAAtB;AAWA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA;AAAK,IAAA,EAAE,EAAP,IAAA;AAAa,IAAA,SAAS,EAAES,EAAE,CAAA,SAAA,EAAA,eAAA;AAA1B,GAAA,EAAA,UAAA,EAAA,IAAA,EAAA;AAAkF,IAAA,GAAG,EAAEC;AAAvF,GAAA,CAAA,EADF,aACE,CADF;AAjBJ,CACY,CADY,CAAxB;AAyBAf,WAAW,CAAXA,SAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKgB,GAAG,CADRhB,SAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAGE;AACF;AACA;AACA;AACEK,EAAAA,IAAI,EAAEY,SAAS,CAATA,KAAAA,CAAgB,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAhBA,GAAgB,CAAhBA;AAPRjB,CAAAA,CAAAA;AAUA,eAAA,WAAA","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport Box from 'ui-box'\nimport { useStyleConfig } from '../../hooks'\n\nconst emptyObject = {}\n\nconst internalStyles = {\n  margin: 0,\n  marginLeft: '1.1em',\n  padding: 0,\n  listStyle: 'decimal'\n}\n\nconst OrderedList = memo(\n  forwardRef(function OrderedList(props, ref) {\n    const { children, className, size = 400, ...rest } = props\n\n    const { className: themedClassName, ...styleProps } = useStyleConfig('List', { size }, emptyObject, internalStyles)\n\n    const finalChildren = React.Children.map(children, child => {\n      if (!React.isValidElement(child)) {\n        return child\n      }\n\n      return React.cloneElement(child, {\n        // Prefer more granularly defined icon if present\n        size: child.props.size || size\n      })\n    })\n\n    return (\n      <Box is=\"ol\" className={cx(className, themedClassName)} {...styleProps} {...rest} ref={ref}>\n        {finalChildren}\n      </Box>\n    )\n  })\n)\n\nOrderedList.propTypes = {\n  ...Box.propTypes,\n\n  /**\n   * Size of the text used in a list item.\n   * Can be: 300, 400, 500, 600.\n   */\n  size: PropTypes.oneOf([300, 400, 500, 600])\n}\n\nexport default OrderedList\n"]},"metadata":{},"sourceType":"module"}