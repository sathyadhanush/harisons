{"ast":null,"code":"var colorMap = {\n  none: {\n    base: 'white',\n    hover: 'colors.neutral.lightest',\n    focus: 'colors.neutral.lightest',\n    active: 'colors.blue.lightest',\n    current: 'colors.blue.lightest'\n  },\n  danger: {\n    base: 'colors.red.lightest',\n    hover: 'colors.red.lightest',\n    focus: 'colors.red.light',\n    active: 'colors.red.light',\n    current: 'colors.red.light'\n  },\n  warning: {\n    base: 'colors.yellow.lightest',\n    hover: 'colors.yellow.lightest',\n    focus: 'colors.yellow.light',\n    active: 'colors.yellow.light',\n    current: 'colors.yellow.light'\n  },\n  success: {\n    base: 'colors.green.lightest',\n    hover: 'colors.green.lightest',\n    focus: 'colors.green.light',\n    active: 'colors.green.light',\n    current: 'colors.green.light'\n  }\n};\n\nvar getBackgroundForIntentAndState = function getBackgroundForIntentAndState(intent, state) {\n  return colorMap[intent][state];\n};\n\nvar baseStyle = {\n  outline: 'none',\n  textDecoration: 'none',\n  height: 48,\n  _isSelectable: {\n    cursor: 'pointer'\n  }\n};\nvar appearances = {\n  \"default\": {\n    backgroundColor: function backgroundColor(_, props) {\n      return getBackgroundForIntentAndState(props.intent, 'base');\n    },\n    _hover: {\n      backgroundColor: function backgroundColor(_, props) {\n        return getBackgroundForIntentAndState(props.intent, 'hover');\n      }\n    },\n    _focus: {\n      backgroundColor: function backgroundColor(_, props) {\n        return getBackgroundForIntentAndState(props.intent, 'focus');\n      }\n    },\n    _active: {\n      backgroundColor: function backgroundColor(_, props) {\n        return getBackgroundForIntentAndState(props.intent, 'active');\n      }\n    },\n    _current: {\n      backgroundColor: function backgroundColor(_, props) {\n        return getBackgroundForIntentAndState(props.intent, 'current');\n      }\n    }\n  }\n};\nexport default {\n  baseStyle: baseStyle,\n  appearances: appearances\n};","map":{"version":3,"sources":["../../../../src/themes/classic/components/table-row.js"],"names":["colorMap","none","base","hover","focus","active","current","danger","warning","success","getBackgroundForIntentAndState","baseStyle","outline","textDecoration","height","_isSelectable","cursor","appearances","backgroundColor","props","_hover","_focus","_active","_current"],"mappings":"AAAA,IAAMA,QAAQ,GAAG;AACfC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EADA,OAAA;AAEJC,IAAAA,KAAK,EAFD,yBAAA;AAGJC,IAAAA,KAAK,EAHD,yBAAA;AAIJC,IAAAA,MAAM,EAJF,sBAAA;AAKJC,IAAAA,OAAO,EAAE;AALL,GADS;AASfC,EAAAA,MAAM,EAAE;AACNL,IAAAA,IAAI,EADE,qBAAA;AAENC,IAAAA,KAAK,EAFC,qBAAA;AAGNC,IAAAA,KAAK,EAHC,kBAAA;AAINC,IAAAA,MAAM,EAJA,kBAAA;AAKNC,IAAAA,OAAO,EAAE;AALH,GATO;AAiBfE,EAAAA,OAAO,EAAE;AACPN,IAAAA,IAAI,EADG,wBAAA;AAEPC,IAAAA,KAAK,EAFE,wBAAA;AAGPC,IAAAA,KAAK,EAHE,qBAAA;AAIPC,IAAAA,MAAM,EAJC,qBAAA;AAKPC,IAAAA,OAAO,EAAE;AALF,GAjBM;AAyBfG,EAAAA,OAAO,EAAE;AACPP,IAAAA,IAAI,EADG,uBAAA;AAEPC,IAAAA,KAAK,EAFE,uBAAA;AAGPC,IAAAA,KAAK,EAHE,oBAAA;AAIPC,IAAAA,MAAM,EAJC,oBAAA;AAKPC,IAAAA,OAAO,EAAE;AALF;AAzBM,CAAjB;;AAkCA,IAAMI,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAA,MAAA,EAAA,KAAA,EAAA;AAAA,SAAmBV,QAAQ,CAARA,MAAQ,CAARA,CAAnB,KAAmBA,CAAnB;AAAvC,CAAA;;AAEA,IAAMW,SAAS,GAAG;AAChBC,EAAAA,OAAO,EADS,MAAA;AAEhBC,EAAAA,cAAc,EAFE,MAAA;AAGhBC,EAAAA,MAAM,EAHU,EAAA;AAKhBC,EAAAA,aAAa,EAAE;AACbC,IAAAA,MAAM,EAAE;AADK;AALC,CAAlB;AAUA,IAAMC,WAAW,GAAG;AAClB,aAAS;AACPC,IAAAA,eAAe,EAAE,SAAA,eAAA,CAAA,CAAA,EAAA,KAAA,EAAA;AAAA,aAAcR,8BAA8B,CAACS,KAAK,CAAN,MAAA,EAA5C,MAA4C,CAA5C;AADV,KAAA;AAGPC,IAAAA,MAAM,EAAE;AACNF,MAAAA,eAAe,EAAE,SAAA,eAAA,CAAA,CAAA,EAAA,KAAA,EAAA;AAAA,eAAcR,8BAA8B,CAACS,KAAK,CAAN,MAAA,EAA5C,OAA4C,CAA5C;AAAA;AADX,KAHD;AAOPE,IAAAA,MAAM,EAAE;AACNH,MAAAA,eAAe,EAAE,SAAA,eAAA,CAAA,CAAA,EAAA,KAAA,EAAA;AAAA,eAAcR,8BAA8B,CAACS,KAAK,CAAN,MAAA,EAA5C,OAA4C,CAA5C;AAAA;AADX,KAPD;AAWPG,IAAAA,OAAO,EAAE;AACPJ,MAAAA,eAAe,EAAE,SAAA,eAAA,CAAA,CAAA,EAAA,KAAA,EAAA;AAAA,eAAcR,8BAA8B,CAACS,KAAK,CAAN,MAAA,EAA5C,QAA4C,CAA5C;AAAA;AADV,KAXF;AAePI,IAAAA,QAAQ,EAAE;AACRL,MAAAA,eAAe,EAAE,SAAA,eAAA,CAAA,CAAA,EAAA,KAAA,EAAA;AAAA,eAAcR,8BAA8B,CAACS,KAAK,CAAN,MAAA,EAA5C,SAA4C,CAA5C;AAAA;AADT;AAfH;AADS,CAApB;AAsBA,eAAe;AACbR,EAAAA,SAAS,EADI,SAAA;AAEbM,EAAAA,WAAW,EAAXA;AAFa,CAAf","sourcesContent":["const colorMap = {\n  none: {\n    base: 'white',\n    hover: 'colors.neutral.lightest',\n    focus: 'colors.neutral.lightest',\n    active: 'colors.blue.lightest',\n    current: 'colors.blue.lightest'\n  },\n\n  danger: {\n    base: 'colors.red.lightest',\n    hover: 'colors.red.lightest',\n    focus: 'colors.red.light',\n    active: 'colors.red.light',\n    current: 'colors.red.light'\n  },\n\n  warning: {\n    base: 'colors.yellow.lightest',\n    hover: 'colors.yellow.lightest',\n    focus: 'colors.yellow.light',\n    active: 'colors.yellow.light',\n    current: 'colors.yellow.light'\n  },\n\n  success: {\n    base: 'colors.green.lightest',\n    hover: 'colors.green.lightest',\n    focus: 'colors.green.light',\n    active: 'colors.green.light',\n    current: 'colors.green.light'\n  }\n}\n\nconst getBackgroundForIntentAndState = (intent, state) => colorMap[intent][state]\n\nconst baseStyle = {\n  outline: 'none',\n  textDecoration: 'none',\n  height: 48,\n\n  _isSelectable: {\n    cursor: 'pointer'\n  }\n}\n\nconst appearances = {\n  default: {\n    backgroundColor: (_, props) => getBackgroundForIntentAndState(props.intent, 'base'),\n\n    _hover: {\n      backgroundColor: (_, props) => getBackgroundForIntentAndState(props.intent, 'hover')\n    },\n\n    _focus: {\n      backgroundColor: (_, props) => getBackgroundForIntentAndState(props.intent, 'focus')\n    },\n\n    _active: {\n      backgroundColor: (_, props) => getBackgroundForIntentAndState(props.intent, 'active')\n    },\n\n    _current: {\n      backgroundColor: (_, props) => getBackgroundForIntentAndState(props.intent, 'current')\n    }\n  }\n}\n\nexport default {\n  baseStyle,\n  appearances\n}\n"]},"metadata":{},"sourceType":"module"}