{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"appearance\", \"disabled\", \"height\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Box, { splitBoxProps } from 'ui-box';\nimport { StackingOrder } from '../../constants';\nimport { SearchIcon } from '../../icons';\nimport { TextInput } from '../../text-input';\n\nvar getIconSizeForInput = function getIconSizeForInput(height) {\n  if (height <= 28) return 12;\n  if (height <= 32) return 14;\n  if (height <= 40) return 16;\n  if (height <= 48) return 18;\n  return 20;\n};\n\nvar SearchInput = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function SearchInput(props, ref) {\n  var _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      disabled = props.disabled,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 32 : _props$height,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var _splitBoxProps = splitBoxProps(restProps),\n      matchedProps = _splitBoxProps.matchedProps,\n      remainingProps = _splitBoxProps.remainingProps;\n\n  var width = matchedProps.width;\n  var iconSize = getIconSizeForInput(height);\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    position: \"relative\",\n    display: \"inline-flex\",\n    height: height\n  }, matchedProps), /*#__PURE__*/React.createElement(Box, {\n    height: height,\n    width: height,\n    pointerEvents: \"none\",\n    position: \"absolute\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    color: \"default\",\n    zIndex: StackingOrder.FOCUSED + 1,\n    size: iconSize\n  })), /*#__PURE__*/React.createElement(TextInput, _extends({\n    ref: ref,\n    height: height,\n    paddingLeft: height,\n    appearance: appearance,\n    disabled: disabled,\n    width: width,\n    type: \"search\"\n  }, remainingProps)));\n}));\nSearchInput.propTypes = _objectSpread({}, TextInput.propTypes);\nexport default SearchInput;","map":{"version":3,"sources":["../../../src/search-input/src/SearchInput.js"],"names":["getIconSizeForInput","height","SearchInput","memo","forwardRef","appearance","disabled","restProps","props","matchedProps","remainingProps","splitBoxProps","width","iconSize","StackingOrder","TextInput"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,OAAA,GAAA,IAAA,aAAA,QAAA,QAAA;AACA,SAAA,aAAA,QAAA,iBAAA;AACA,SAAA,UAAA,QAAA,aAAA;AACA,SAAA,SAAA,QAAA,kBAAA;;AAEA,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAA,MAAA,EAAU;AACpC,MAAIC,MAAM,IAAV,EAAA,EAAkB,OAAA,EAAA;AAClB,MAAIA,MAAM,IAAV,EAAA,EAAkB,OAAA,EAAA;AAClB,MAAIA,MAAM,IAAV,EAAA,EAAkB,OAAA,EAAA;AAClB,MAAIA,MAAM,IAAV,EAAA,EAAkB,OAAA,EAAA;AAClB,SAAA,EAAA;AALF,CAAA;;AAQA,IAAMC,WAAW,GAAA,aAAGC,IAAI,EAAA,aACtBC,UAAU,CAAC,SAAA,WAAA,CAAA,KAAA,EAAA,GAAA,EAAiC;AAC1C,MAAA,iBAAA,GAAwEI,KAAxE,CAAA,UAAA;AAAA,MAAQH,UAAR,GAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,SAAA,GAAA,iBAAA;AAAA,MAAgCC,QAAhC,GAAwEE,KAAxE,CAAA,QAAA;AAAA,MAAA,aAAA,GAAwEA,KAAxE,CAAA,MAAA;AAAA,MAA0CP,MAA1C,GAAA,aAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,aAAA;AAAA,MAA0DM,SAA1D,GAAA,wBAAA,CAAA,KAAA,EAAA,SAAA,CAAA;;AACA,MAAA,cAAA,GAAyCI,aAAa,CAAtD,SAAsD,CAAtD;AAAA,MAAQF,YAAR,GAAA,cAAA,CAAA,YAAA;AAAA,MAAsBC,cAAtB,GAAA,cAAA,CAAA,cAAA;;AACA,MAAQE,KAAR,GAAkBH,YAAlB,CAAA,KAAA;AACA,MAAMI,QAAQ,GAAGb,mBAAmB,CAApC,MAAoC,CAApC;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA;AAAK,IAAA,QAAQ,EAAb,UAAA;AAAyB,IAAA,OAAO,EAAhC,aAAA;AAA+C,IAAA,MAAM,EAAEC;AAAvD,GAAA,EAAA,YAAA,CAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACE,IAAA,MAAM,EADR,MAAA;AAEE,IAAA,KAAK,EAFP,MAAA;AAGE,IAAA,aAAa,EAHf,MAAA;AAIE,IAAA,QAAQ,EAJV,UAAA;AAKE,IAAA,OAAO,EALT,MAAA;AAME,IAAA,cAAc,EANhB,QAAA;AAOE,IAAA,UAAU,EAAC;AAPb,GAAA,EAAA,aASE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAAY,IAAA,KAAK,EAAjB,SAAA;AAA4B,IAAA,MAAM,EAAEa,aAAa,CAAbA,OAAAA,GAApC,CAAA;AAA+D,IAAA,IAAI,EAAED;AAArE,GAAA,CATF,CADF,EAAA,aAYE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA;AACE,IAAA,GAAG,EADL,GAAA;AAEE,IAAA,MAAM,EAFR,MAAA;AAGE,IAAA,WAAW,EAHb,MAAA;AAIE,IAAA,UAAU,EAJZ,UAAA;AAKE,IAAA,QAAQ,EALV,QAAA;AAME,IAAA,KAAK,EANP,KAAA;AAOE,IAAA,IAAI,EAAC;AAPP,GAAA,EAbJ,cAaI,CAAA,CAZF,CADF;AAPJ,CACY,CADY,CAAxB;AAmCAX,WAAW,CAAXA,SAAAA,GAAAA,aAAAA,CAAAA,EAAAA,EAIKa,SAAS,CAJdb,SAAAA,CAAAA;AAOA,eAAA,WAAA","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport Box, { splitBoxProps } from 'ui-box'\nimport { StackingOrder } from '../../constants'\nimport { SearchIcon } from '../../icons'\nimport { TextInput } from '../../text-input'\n\nconst getIconSizeForInput = height => {\n  if (height <= 28) return 12\n  if (height <= 32) return 14\n  if (height <= 40) return 16\n  if (height <= 48) return 18\n  return 20\n}\n\nconst SearchInput = memo(\n  forwardRef(function SearchInput(props, ref) {\n    const { appearance = 'default', disabled, height = 32, ...restProps } = props\n    const { matchedProps, remainingProps } = splitBoxProps(restProps)\n    const { width } = matchedProps\n    const iconSize = getIconSizeForInput(height)\n\n    return (\n      <Box position=\"relative\" display=\"inline-flex\" height={height} {...matchedProps}>\n        <Box\n          height={height}\n          width={height}\n          pointerEvents=\"none\"\n          position=\"absolute\"\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <SearchIcon color=\"default\" zIndex={StackingOrder.FOCUSED + 1} size={iconSize} />\n        </Box>\n        <TextInput\n          ref={ref}\n          height={height}\n          paddingLeft={height}\n          appearance={appearance}\n          disabled={disabled}\n          width={width}\n          type=\"search\"\n          {...remainingProps}\n        />\n      </Box>\n    )\n  })\n)\n\nSearchInput.propTypes = {\n  /**\n   * Composes the TextInput component as the base.\n   */\n  ...TextInput.propTypes\n}\n\nexport default SearchInput\n"]},"metadata":{},"sourceType":"module"}