{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"fill\", \"size\"],\n    _excluded2 = [\"id\", \"name\", \"label\", \"disabled\", \"isInvalid\", \"checked\", \"onChange\", \"value\", \"size\", \"isRequired\", \"appearance\"],\n    _excluded3 = [\"className\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Box, { spacing, position, layout, dimensions } from 'ui-box';\nimport { useStyleConfig } from '../../hooks';\nimport { Text } from '../../typography';\nvar CircleIcon = /*#__PURE__*/memo(function CircleIcon(_ref) {\n  var _ref$fill = _ref.fill,\n      fill = _ref$fill === void 0 ? 'currentColor' : _ref$fill,\n      size = _ref.size,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: size,\n    height: size,\n    viewBox: \"0 0 10 10\"\n  }, props), /*#__PURE__*/React.createElement(\"circle\", {\n    fill: fill,\n    cx: \"5\",\n    cy: \"5\",\n    r: \"5\"\n  }));\n});\nCircleIcon.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.number\n};\n\nvar noop = function noop() {};\n\nvar pseudoSelectors = {\n  _base: '& + div',\n  _disabled: '&[disabled] + div',\n  _hover: '&:not([disabled]):hover + div',\n  _focus: '&:not([disabled]):focus + div',\n  _active: '&:not([disabled]):active + div',\n  _checked: '&:checked + div, &[type=checkbox]:indeterminate + div',\n  _checkedHover: '&:not([disabled]):checked:hover + div, &[type=checkbox]:not([disabled]):indeterminate:hover + div',\n  _checkedActive: '&:not([disabled]):checked:active + div, &[type=checkbox]:not([disabled]):indeterminate:active + div',\n  _checkedDisabled: '&[disabled]:checked + div, &[type=checkbox][disabled]:indeterminate + div'\n};\n\nvar internalStyles = _defineProperty({\n  border: '0',\n  clip: 'rect(1px, 1px, 1px, 1px)',\n  height: '1px',\n  overflow: 'hidden',\n  padding: '0',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  width: '1px',\n  opacity: '0'\n}, pseudoSelectors._base, {\n  WebkitFontSmoothing: 'antialiased',\n  textDecoration: 'none',\n  WebkitAppearance: 'none',\n  MozAppearance: 'none',\n  border: 'none',\n  outline: 'none',\n  cursor: 'pointer'\n});\n\nvar Radio = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Radio(props, ref) {\n  var id = props.id,\n      name = props.name,\n      label = props.label,\n      disabled = props.disabled,\n      _props$isInvalid = props.isInvalid,\n      isInvalid = _props$isInvalid === void 0 ? false : _props$isInvalid,\n      checked = props.checked,\n      _props$onChange = props.onChange,\n      onChange = _props$onChange === void 0 ? noop : _props$onChange,\n      value = props.value,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 12 : _props$size,\n      _props$isRequired = props.isRequired,\n      isRequired = _props$isRequired === void 0 ? false : _props$isRequired,\n      _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      rest = _objectWithoutProperties(props, _excluded2);\n\n  var _useStyleConfig = useStyleConfig('Radio', {\n    appearance: appearance\n  }, pseudoSelectors, internalStyles),\n      themedClassName = _useStyleConfig.className,\n      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded3);\n\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    is: \"label\",\n    ref: ref,\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    position: \"relative\",\n    display: \"flex\",\n    marginY: size === 12 ? 8 : 12\n  }, rest), /*#__PURE__*/React.createElement(Box, _extends({\n    is: \"input\",\n    className: themedClassName,\n    id: id,\n    type: \"radio\",\n    name: name,\n    value: value,\n    checked: checked,\n    onChange: onChange,\n    disabled: disabled,\n    \"aria-invalid\": isInvalid\n  }, boxProps, {\n    required: isRequired\n  })), /*#__PURE__*/React.createElement(Box, {\n    boxSizing: \"border-box\",\n    borderRadius: 9999,\n    display: \"flex\",\n    flex: \"none\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 2,\n    width: size,\n    height: size\n  }, /*#__PURE__*/React.createElement(CircleIcon, {\n    size: size / 2\n  })), label && /*#__PURE__*/React.createElement(Text, {\n    marginLeft: size === 12 ? 8 : 10,\n    size: size === 12 ? 300 : 400,\n    color: disabled ? 'muted' : 'default'\n  }, label));\n}));\nRadio.propTypes = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, spacing.propTypes), position.propTypes), layout.propTypes), dimensions.propTypes), {}, {\n  /**\n   * The id attribute of the radio.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The name attribute of the radio.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Label of the radio.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The value attribute of the radio.\n   */\n  value: PropTypes.string,\n\n  /**\n   * Function called when state changes\n   * Signature:\n   * ```\n   * function(event: object, checked: boolean) => void\n   * ```\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * When true, the radio is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * When true, the radio is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The size of the radio circle. This also informs the text size and spacing.\n   */\n  size: PropTypes.oneOf([12, 16]),\n\n  /**\n   * When true, the radio get the required attribute.\n   */\n  isRequired: PropTypes.bool,\n\n  /**\n   * When true, the aria-invalid attribute is true.\n   * Used for accessibility.\n   */\n  isInvalid: PropTypes.bool,\n\n  /**\n   * The appearance of the checkbox.\n   * The default theme only comes with a default style.\n   */\n  appearance: PropTypes.string\n});\nexport default Radio;","map":{"version":3,"sources":["../../../src/radio/src/Radio.js"],"names":["CircleIcon","memo","fill","size","props","PropTypes","number","noop","pseudoSelectors","_base","_disabled","_hover","_focus","_active","_checked","_checkedHover","_checkedActive","_checkedDisabled","internalStyles","border","clip","height","overflow","padding","position","whiteSpace","width","opacity","WebkitFontSmoothing","textDecoration","WebkitAppearance","MozAppearance","outline","cursor","Radio","forwardRef","id","name","label","disabled","isInvalid","checked","onChange","value","isRequired","appearance","rest","themedClassName","boxProps","useStyleConfig","spacing","layout","dimensions","string"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport Box, { spacing, position, layout, dimensions } from 'ui-box'\nimport { useStyleConfig } from '../../hooks'\nimport { Text } from '../../typography'\n\nconst CircleIcon = memo(function CircleIcon({ fill = 'currentColor', size, ...props }) {\n  return (\n    <svg width={size} height={size} viewBox=\"0 0 10 10\" {...props}>\n      <circle fill={fill} cx=\"5\" cy=\"5\" r=\"5\" />\n    </svg>\n  )\n})\n\nCircleIcon.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.number\n}\n\nconst noop = () => {}\n\nconst pseudoSelectors = {\n  _base: '& + div',\n  _disabled: '&[disabled] + div',\n  _hover: '&:not([disabled]):hover + div',\n  _focus: '&:not([disabled]):focus + div',\n  _active: '&:not([disabled]):active + div',\n  _checked: '&:checked + div, &[type=checkbox]:indeterminate + div',\n  _checkedHover: '&:not([disabled]):checked:hover + div, &[type=checkbox]:not([disabled]):indeterminate:hover + div',\n  _checkedActive: '&:not([disabled]):checked:active + div, &[type=checkbox]:not([disabled]):indeterminate:active + div',\n  _checkedDisabled: '&[disabled]:checked + div, &[type=checkbox][disabled]:indeterminate + div'\n}\n\nconst internalStyles = {\n  border: '0',\n  clip: 'rect(1px, 1px, 1px, 1px)',\n  height: '1px',\n  overflow: 'hidden',\n  padding: '0',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  width: '1px',\n  opacity: '0',\n\n  [pseudoSelectors._base]: {\n    WebkitFontSmoothing: 'antialiased',\n    textDecoration: 'none',\n    WebkitAppearance: 'none',\n    MozAppearance: 'none',\n    border: 'none',\n    outline: 'none',\n    cursor: 'pointer'\n  }\n}\n\nconst Radio = memo(\n  forwardRef(function Radio(props, ref) {\n    const {\n      id,\n      name,\n      label,\n      disabled,\n      isInvalid = false,\n      checked,\n      onChange = noop,\n      value,\n      size = 12,\n      isRequired = false,\n      appearance = 'default',\n      ...rest\n    } = props\n\n    const { className: themedClassName, ...boxProps } = useStyleConfig(\n      'Radio',\n      { appearance },\n      pseudoSelectors,\n      internalStyles\n    )\n\n    return (\n      <Box\n        is=\"label\"\n        ref={ref}\n        cursor={disabled ? 'not-allowed' : 'pointer'}\n        position=\"relative\"\n        display=\"flex\"\n        marginY={size === 12 ? 8 : 12}\n        {...rest}\n      >\n        <Box\n          is=\"input\"\n          className={themedClassName}\n          id={id}\n          type=\"radio\"\n          name={name}\n          value={value}\n          checked={checked}\n          onChange={onChange}\n          disabled={disabled}\n          aria-invalid={isInvalid}\n          {...boxProps}\n          required={isRequired}\n        />\n        <Box\n          boxSizing=\"border-box\"\n          borderRadius={9999}\n          display=\"flex\"\n          flex=\"none\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          marginTop={2}\n          width={size}\n          height={size}\n        >\n          <CircleIcon size={size / 2} />\n        </Box>\n        {label && (\n          <Text marginLeft={size === 12 ? 8 : 10} size={size === 12 ? 300 : 400} color={disabled ? 'muted' : 'default'}>\n            {label}\n          </Text>\n        )}\n      </Box>\n    )\n  })\n)\n\nRadio.propTypes = {\n  /**\n   * Composes some Box APIs.\n   */\n  ...spacing.propTypes,\n  ...position.propTypes,\n  ...layout.propTypes,\n  ...dimensions.propTypes,\n\n  /**\n   * The id attribute of the radio.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The name attribute of the radio.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Label of the radio.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The value attribute of the radio.\n   */\n  value: PropTypes.string,\n\n  /**\n   * Function called when state changes\n   * Signature:\n   * ```\n   * function(event: object, checked: boolean) => void\n   * ```\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * When true, the radio is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * When true, the radio is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The size of the radio circle. This also informs the text size and spacing.\n   */\n  size: PropTypes.oneOf([12, 16]),\n\n  /**\n   * When true, the radio get the required attribute.\n   */\n  isRequired: PropTypes.bool,\n\n  /**\n   * When true, the aria-invalid attribute is true.\n   * Used for accessibility.\n   */\n  isInvalid: PropTypes.bool,\n\n  /**\n   * The appearance of the checkbox.\n   * The default theme only comes with a default style.\n   */\n  appearance: PropTypes.string\n}\n\nexport default Radio\n"]},"metadata":{},"sourceType":"module"}