{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { memo, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Pane } from '../../layers';\nimport MenuDivider from './MenuDivider';\nimport MenuGroup from './MenuGroup';\nimport MenuItem from './MenuItem';\nimport MenuOption from './MenuOption';\nimport MenuOptionsGroup from './MenuOptionsGroup';\nvar Menu = /*#__PURE__*/memo(function Menu(props) {\n  var menuRef = useRef(null);\n  var firstItem = useRef();\n  var lastItem = useRef();\n  var menuItems = useRef();\n  useEffect(function () {\n    var currentMenuRef = menuRef.current;\n    menuItems.current = _toConsumableArray(currentMenuRef.querySelectorAll('[role=\"menuitemradio\"]:not([disabled]), [role=\"menuitem\"]:not([disabled])'));\n    firstItem.current = menuItems.current[0];\n    lastItem.current = menuItems.current[menuItems.current.length - 1]; // Go to next/previous item if it exists\n    // or loop around\n\n    var focusNext = function focusNext(currentItem, startItem) {\n      // Determine which item is the startItem (first or last)\n      var goingDown = startItem === firstItem.current; // Helper function for getting next legitimate element\n\n      var move = function move(elem) {\n        var indexOfItem = menuItems.current.indexOf(elem);\n\n        if (goingDown) {\n          if (indexOfItem < menuItems.current.length - 1) {\n            return menuItems.current[indexOfItem + 1];\n          }\n\n          return startItem;\n        }\n\n        if (indexOfItem - 1 > -1) {\n          return menuItems.current[indexOfItem - 1];\n        }\n\n        return startItem;\n      }; // Make first move\n\n\n      var nextItem = move(currentItem); // Focus the first one that's not disabled\n\n      nextItem.focus();\n    };\n\n    function onKeyPressListener(e) {\n      var target = e.target;\n      var menuItem = menuItems.current && menuItems.current.find(function (item) {\n        return item === target;\n      });\n      if (!menuItem) return;\n\n      if (e.key === 'ArrowDown') {\n        e.preventDefault();\n        focusNext(menuItem, firstItem.current);\n      }\n\n      if (e.key === 'ArrowUp') {\n        e.preventDefault();\n        focusNext(menuItem, lastItem.current);\n      }\n\n      if (e.key === 'Home') {\n        e.preventDefault();\n        firstItem.current.focus();\n      }\n\n      if (e.key === 'End') {\n        e.preventDefault();\n        lastItem.current.focus();\n      }\n    }\n\n    currentMenuRef.addEventListener('keydown', onKeyPressListener);\n    return function () {\n      currentMenuRef.removeEventListener('keydown', onKeyPressListener);\n    };\n  }, [menuRef]);\n  var children = props.children;\n\n  var renderEmptyChildren = function renderEmptyChildren() {\n    return /*#__PURE__*/React.createElement(MenuGroup, null, /*#__PURE__*/React.createElement(MenuItem, {\n      disabled: true\n    }, \"No items...\"));\n  };\n\n  return /*#__PURE__*/React.createElement(Pane, {\n    is: \"nav\",\n    ref: menuRef,\n    role: \"menu\",\n    outline: \"none\"\n  }, children || renderEmptyChildren());\n});\nMenu.Item = MenuItem;\nMenu.Divider = MenuDivider;\nMenu.Group = MenuGroup;\nMenu.Divider = MenuDivider;\nMenu.Group = MenuGroup;\nMenu.Option = MenuOption;\nMenu.OptionsGroup = MenuOptionsGroup;\nMenu.propTypes = {\n  /**\n   * The children of the component.\n   */\n  children: PropTypes.node\n};\nexport default Menu;","map":{"version":3,"sources":["../../../src/menu/src/Menu.js"],"names":["Menu","memo","menuRef","useRef","firstItem","lastItem","menuItems","useEffect","currentMenuRef","focusNext","goingDown","startItem","move","indexOfItem","nextItem","target","e","menuItem","item","children","props","renderEmptyChildren","PropTypes","node"],"mappings":"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","sourcesContent":["import React, { memo, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { Pane } from '../../layers'\nimport MenuDivider from './MenuDivider'\nimport MenuGroup from './MenuGroup'\nimport MenuItem from './MenuItem'\nimport MenuOption from './MenuOption'\nimport MenuOptionsGroup from './MenuOptionsGroup'\n\nconst Menu = memo(function Menu(props) {\n  const menuRef = useRef(null)\n\n  const firstItem = useRef()\n  const lastItem = useRef()\n\n  const menuItems = useRef()\n\n  useEffect(() => {\n    const currentMenuRef = menuRef.current\n    menuItems.current = [\n      ...currentMenuRef.querySelectorAll('[role=\"menuitemradio\"]:not([disabled]), [role=\"menuitem\"]:not([disabled])')\n    ]\n\n    firstItem.current = menuItems.current[0]\n    lastItem.current = menuItems.current[menuItems.current.length - 1]\n\n    // Go to next/previous item if it exists\n    // or loop around\n    const focusNext = (currentItem, startItem) => {\n      // Determine which item is the startItem (first or last)\n      const goingDown = startItem === firstItem.current\n\n      // Helper function for getting next legitimate element\n      const move = elem => {\n        const indexOfItem = menuItems.current.indexOf(elem)\n\n        if (goingDown) {\n          if (indexOfItem < menuItems.current.length - 1) {\n            return menuItems.current[indexOfItem + 1]\n          }\n\n          return startItem\n        }\n\n        if (indexOfItem - 1 > -1) {\n          return menuItems.current[indexOfItem - 1]\n        }\n\n        return startItem\n      }\n\n      // Make first move\n      const nextItem = move(currentItem)\n\n      // Focus the first one that's not disabled\n      nextItem.focus()\n    }\n\n    function onKeyPressListener(e) {\n      const { target } = e\n      const menuItem = menuItems.current && menuItems.current.find(item => item === target)\n\n      if (!menuItem) return\n\n      if (e.key === 'ArrowDown') {\n        e.preventDefault()\n        focusNext(menuItem, firstItem.current)\n      }\n\n      if (e.key === 'ArrowUp') {\n        e.preventDefault()\n        focusNext(menuItem, lastItem.current)\n      }\n\n      if (e.key === 'Home') {\n        e.preventDefault()\n        firstItem.current.focus()\n      }\n\n      if (e.key === 'End') {\n        e.preventDefault()\n        lastItem.current.focus()\n      }\n    }\n\n    currentMenuRef.addEventListener('keydown', onKeyPressListener)\n\n    return () => {\n      currentMenuRef.removeEventListener('keydown', onKeyPressListener)\n    }\n  }, [menuRef])\n\n  const { children } = props\n\n  const renderEmptyChildren = () => {\n    return (\n      <MenuGroup>\n        <MenuItem disabled>No items...</MenuItem>\n      </MenuGroup>\n    )\n  }\n  return (\n    <Pane is=\"nav\" ref={menuRef} role=\"menu\" outline=\"none\">\n      {children || renderEmptyChildren()}\n    </Pane>\n  )\n})\n\nMenu.Item = MenuItem\nMenu.Divider = MenuDivider\nMenu.Group = MenuGroup\nMenu.Divider = MenuDivider\nMenu.Group = MenuGroup\nMenu.Option = MenuOption\nMenu.OptionsGroup = MenuOptionsGroup\n\nMenu.propTypes = {\n  /**\n   * The children of the component.\n   */\n  children: PropTypes.node\n}\n\nexport default Menu\n"]},"metadata":{},"sourceType":"module"}