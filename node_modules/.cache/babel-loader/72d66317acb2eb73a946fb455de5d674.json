{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"appearance\", \"direction\", \"disabled\", \"is\", \"isSelected\", \"onKeyDown\", \"onSelect\", \"height\", \"className\", \"tabIndex\"],\n    _excluded2 = [\"className\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, memo, useCallback } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { useClickable, useLatest, useStyleConfig } from '../../hooks';\nimport safeInvoke from '../../lib/safe-invoke';\nimport warning from '../../lib/warning';\nimport { Text } from '../../typography';\n\nvar noop = function noop() {};\n\nvar getInternalStyles = function getInternalStyles(direction) {\n  return {\n    alignItems: 'center',\n    justifyContent: direction === 'horizontal' ? 'center' : 'flex-start',\n    textDecoration: 'none',\n    cursor: 'pointer',\n    outline: 'none',\n    WebkitFontSmoothing: 'antialiased',\n    WebkitAppearance: 'none',\n    MozAppearance: 'none',\n    '&::-moz-focus-inner ': {\n      border: 0\n    },\n    display: direction === 'horizontal' ? 'inline-flex' : 'flex',\n    width: direction === 'horizontal' ? 'auto' : '100%'\n  };\n};\n\nvar pseudoSelectors = {\n  _active: '&:active',\n  _after: '&:after',\n  _before: '&:before',\n  _current: '&[aria-current=\"page\"], &[aria-selected=\"true\"]',\n  _disabled: '&[aria-disabled=\"true\"]',\n  _focus: '&:focus',\n  _hover: '&:hover'\n};\nvar Tab = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Tab(props, ref) {\n  var _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'secondary' : _props$appearance,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'horizontal' : _props$direction,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$is = props.is,\n      is = _props$is === void 0 ? 'span' : _props$is,\n      isSelected = props.isSelected,\n      _props$onKeyDown = props.onKeyDown,\n      onKeyDown = _props$onKeyDown === void 0 ? noop : _props$onKeyDown,\n      _props$onSelect = props.onSelect,\n      onSelect = _props$onSelect === void 0 ? noop : _props$onSelect,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 28 : _props$height,\n      className = props.className,\n      tabIndex = props.tabIndex,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useStyleConfig = useStyleConfig('Tab', {\n    appearance: appearance,\n    direction: direction\n  }, pseudoSelectors, getInternalStyles(direction)),\n      themedClassName = _useStyleConfig.className,\n      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  var onClickRef = useLatest(props.onClick);\n  var handleClick = useCallback(function (event) {\n    safeInvoke(onClickRef.current, event);\n\n    if (!disabled) {\n      onSelect();\n    }\n  }, // onClickRef is a ref, but eslint can't figure that out\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [disabled, onSelect]);\n  var clickableProps = useClickable({\n    disabled: disabled,\n    onKeyDown: onKeyDown,\n    tabIndex: tabIndex\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(typeof props.onClick === 'function', '<Tab> expects `onSelect` prop, but you passed `onClick`.');\n  }\n\n  var elementBasedProps;\n\n  if (disabled) {\n    elementBasedProps = {\n      'aria-disabled': true\n    };\n  }\n\n  if (is === 'a') {\n    // Use aria-current when it's a link\n    // https://tink.uk/using-the-aria-current-attribute/\n    elementBasedProps = isSelected ? _objectSpread(_objectSpread({}, elementBasedProps), {}, {\n      'aria-current': 'page'\n    }) : {};\n  } else {\n    // Use a role=\"tablist\" around the tabs\n    // Also pass down a aria-controls=\"panelId\"\n    // https://www.stefanjudis.com/blog/aria-selected-and-when-to-use-it/\n    elementBasedProps = _objectSpread(_objectSpread({}, elementBasedProps), {}, {\n      'aria-selected': isSelected,\n      role: 'tab'\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Text, _extends({\n    className: cx(className, themedClassName),\n    is: is,\n    size: 300,\n    height: height,\n    ref: ref,\n    tabIndex: 0\n  }, boxProps, rest, {\n    onClick: handleClick\n  }, clickableProps, elementBasedProps));\n}));\nTab.propTypes = _objectSpread(_objectSpread({}, Text.propTypes), {}, {\n  /**\n   * Function triggered when tab is selected.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * When true, the tab is selected.\n   */\n  isSelected: PropTypes.bool,\n\n  /**\n   * The appearance of the tab.\n   * The default theme has primary, and secondary. The default is secondary\n   */\n  appearance: PropTypes.string,\n\n  /**\n   * The directionality of the tab.\n   * If the tab is apart of a vertical or horizontal list\n   */\n  direction: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * Class name passed to the Tab.\n   * Only use this if you know what you are doing.\n   */\n  className: PropTypes.string\n});\nexport default Tab;","map":{"version":3,"sources":["../../../src/tabs/src/Tab.js"],"names":["noop","getInternalStyles","alignItems","justifyContent","direction","textDecoration","cursor","outline","WebkitFontSmoothing","WebkitAppearance","MozAppearance","border","display","width","pseudoSelectors","_active","_after","_before","_current","_disabled","_focus","_hover","Tab","memo","forwardRef","appearance","disabled","is","isSelected","onKeyDown","onSelect","height","className","tabIndex","rest","props","themedClassName","boxProps","useStyleConfig","onClickRef","useLatest","handleClick","useCallback","safeInvoke","clickableProps","useClickable","process","warning","elementBasedProps","role","cx","Text","PropTypes","string"],"mappings":"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","sourcesContent":["import React, { forwardRef, memo, useCallback } from 'react'\nimport cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport { useClickable, useLatest, useStyleConfig } from '../../hooks'\nimport safeInvoke from '../../lib/safe-invoke'\nimport warning from '../../lib/warning'\nimport { Text } from '../../typography'\n\nconst noop = () => {}\n\nconst getInternalStyles = direction => ({\n  alignItems: 'center',\n  justifyContent: direction === 'horizontal' ? 'center' : 'flex-start',\n  textDecoration: 'none',\n  cursor: 'pointer',\n  outline: 'none',\n  WebkitFontSmoothing: 'antialiased',\n  WebkitAppearance: 'none',\n  MozAppearance: 'none',\n  '&::-moz-focus-inner ': {\n    border: 0\n  },\n  display: direction === 'horizontal' ? 'inline-flex' : 'flex',\n  width: direction === 'horizontal' ? 'auto' : '100%'\n})\n\nconst pseudoSelectors = {\n  _active: '&:active',\n  _after: '&:after',\n  _before: '&:before',\n  _current: '&[aria-current=\"page\"], &[aria-selected=\"true\"]',\n  _disabled: '&[aria-disabled=\"true\"]',\n  _focus: '&:focus',\n  _hover: '&:hover'\n}\n\nconst Tab = memo(\n  forwardRef(function Tab(props, ref) {\n    const {\n      appearance = 'secondary',\n      direction = 'horizontal',\n      disabled = false,\n      is = 'span',\n      isSelected,\n      onKeyDown = noop,\n      onSelect = noop,\n      height = 28,\n      className,\n      tabIndex,\n      ...rest\n    } = props\n\n    const { className: themedClassName, ...boxProps } = useStyleConfig(\n      'Tab',\n      { appearance, direction },\n      pseudoSelectors,\n      getInternalStyles(direction)\n    )\n\n    const onClickRef = useLatest(props.onClick)\n    const handleClick = useCallback(\n      event => {\n        safeInvoke(onClickRef.current, event)\n        if (!disabled) {\n          onSelect()\n        }\n      },\n      // onClickRef is a ref, but eslint can't figure that out\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [disabled, onSelect]\n    )\n\n    const clickableProps = useClickable({ disabled, onKeyDown, tabIndex })\n\n    if (process.env.NODE_ENV !== 'production') {\n      warning(typeof props.onClick === 'function', '<Tab> expects `onSelect` prop, but you passed `onClick`.')\n    }\n\n    let elementBasedProps\n    if (disabled) {\n      elementBasedProps = {\n        'aria-disabled': true\n      }\n    }\n\n    if (is === 'a') {\n      // Use aria-current when it's a link\n      // https://tink.uk/using-the-aria-current-attribute/\n      elementBasedProps = isSelected\n        ? {\n            ...elementBasedProps,\n            'aria-current': 'page'\n          }\n        : {}\n    } else {\n      // Use a role=\"tablist\" around the tabs\n      // Also pass down a aria-controls=\"panelId\"\n      // https://www.stefanjudis.com/blog/aria-selected-and-when-to-use-it/\n      elementBasedProps = {\n        ...elementBasedProps,\n        'aria-selected': isSelected,\n        role: 'tab'\n      }\n    }\n\n    return (\n      <Text\n        className={cx(className, themedClassName)}\n        is={is}\n        size={300}\n        height={height}\n        ref={ref}\n        tabIndex={0}\n        {...boxProps}\n        {...rest}\n        onClick={handleClick}\n        {...clickableProps}\n        {...elementBasedProps}\n      />\n    )\n  })\n)\n\nTab.propTypes = {\n  /**\n   * Composes the Text component as the base.\n   */\n  ...Text.propTypes,\n\n  /**\n   * Function triggered when tab is selected.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * When true, the tab is selected.\n   */\n  isSelected: PropTypes.bool,\n\n  /**\n   * The appearance of the tab.\n   * The default theme has primary, and secondary. The default is secondary\n   */\n  appearance: PropTypes.string,\n\n  /**\n   * The directionality of the tab.\n   * If the tab is apart of a vertical or horizontal list\n   */\n  direction: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * Class name passed to the Tab.\n   * Only use this if you know what you are doing.\n   */\n  className: PropTypes.string\n}\n\nexport default Tab\n"]},"metadata":{},"sourceType":"module"}