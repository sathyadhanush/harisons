{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"activeElevation\", \"background\", \"border\", \"borderBottom\", \"borderLeft\", \"borderRight\", \"borderTop\", \"className\", \"elevation\", \"hoverElevation\"],\n    _excluded2 = [\"className\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { useStyleConfig } from '../../hooks';\nvar pseudoSelectors = {\n  _hover: '&:hover',\n  _active: '&:active'\n};\nvar internalStyles = {};\nvar Pane = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Pane(props, ref) {\n  var activeElevation = props.activeElevation,\n      background = props.background,\n      border = props.border,\n      borderBottom = props.borderBottom,\n      borderLeft = props.borderLeft,\n      borderRight = props.borderRight,\n      borderTop = props.borderTop,\n      className = props.className,\n      elevation = props.elevation,\n      hoverElevation = props.hoverElevation,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var _useStyleConfig = useStyleConfig('Pane', {\n    elevation: elevation,\n    hoverElevation: hoverElevation,\n    activeElevation: activeElevation,\n    background: background,\n    border: border,\n    borderTop: borderTop,\n    borderRight: borderRight,\n    borderBottom: borderBottom,\n    borderLeft: borderLeft\n  }, pseudoSelectors, internalStyles),\n      themedClassName = _useStyleConfig.className,\n      styleProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    ref: ref,\n    className: cx(className, themedClassName)\n  }, styleProps, restProps));\n}));\nvar StringAndBoolPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.bool]);\nPane.propTypes = _objectSpread(_objectSpread({}, Box.propTypes), {}, {\n  /**\n   * Background property.\n   * `tint1`, `tint2` etc. from `theme.colors` are available.\n   */\n  background: PropTypes.string,\n\n  /**\n   * Elevation of the Pane.\n   * Values: 0, 1, 2, 3, 4.\n   */\n  elevation: PropTypes.oneOf([0, 1, 2, 3, 4]),\n\n  /**\n   * Elevation of the Pane on hover. Might get deprecated.\n   * Values: 0, 1, 2, 3, 4.\n   */\n  hoverElevation: PropTypes.oneOf([0, 1, 2, 3, 4]),\n\n  /**\n   * Elevation of the Pane on click. Might get deprecated.\n   * Values: 0, 1, 2, 3, 4.\n   */\n  activeElevation: PropTypes.oneOf([0, 1, 2, 3, 4]),\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, muted, default.\n   */\n  border: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderTop: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderRight: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderBottom: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderLeft: StringAndBoolPropType\n});\nexport default Pane;","map":{"version":3,"sources":["../../../src/layers/src/Pane.js"],"names":["pseudoSelectors","_hover","_active","internalStyles","Pane","memo","forwardRef","activeElevation","background","border","borderBottom","borderLeft","borderRight","borderTop","className","elevation","hoverElevation","restProps","props","themedClassName","styleProps","useStyleConfig","cx","StringAndBoolPropType","PropTypes","Box"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport Box from 'ui-box'\nimport { useStyleConfig } from '../../hooks'\n\nconst pseudoSelectors = {\n  _hover: '&:hover',\n  _active: '&:active'\n}\n\nconst internalStyles = {}\n\nconst Pane = memo(\n  forwardRef(function Pane(props, ref) {\n    const {\n      activeElevation,\n\n      // Pulled out of props because we'll get them from the style hook\n      background,\n      border,\n      borderBottom,\n      borderLeft,\n      borderRight,\n      borderTop,\n      className,\n      elevation,\n      hoverElevation,\n\n      ...restProps\n    } = props\n\n    const { className: themedClassName, ...styleProps } = useStyleConfig(\n      'Pane',\n      {\n        elevation,\n        hoverElevation,\n        activeElevation,\n        background,\n        border,\n        borderTop,\n        borderRight,\n        borderBottom,\n        borderLeft\n      },\n      pseudoSelectors,\n      internalStyles\n    )\n\n    return <Box ref={ref} className={cx(className, themedClassName)} {...styleProps} {...restProps} />\n  })\n)\n\nconst StringAndBoolPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n\nPane.propTypes = {\n  /**\n   * Composes the Box component as the base.\n   */\n  ...Box.propTypes,\n\n  /**\n   * Background property.\n   * `tint1`, `tint2` etc. from `theme.colors` are available.\n   */\n  background: PropTypes.string,\n\n  /**\n   * Elevation of the Pane.\n   * Values: 0, 1, 2, 3, 4.\n   */\n  elevation: PropTypes.oneOf([0, 1, 2, 3, 4]),\n\n  /**\n   * Elevation of the Pane on hover. Might get deprecated.\n   * Values: 0, 1, 2, 3, 4.\n   */\n  hoverElevation: PropTypes.oneOf([0, 1, 2, 3, 4]),\n\n  /**\n   * Elevation of the Pane on click. Might get deprecated.\n   * Values: 0, 1, 2, 3, 4.\n   */\n  activeElevation: PropTypes.oneOf([0, 1, 2, 3, 4]),\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, muted, default.\n   */\n  border: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderTop: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderRight: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderBottom: StringAndBoolPropType,\n\n  /**\n   * Can be a explicit border value or a boolean.\n   * Values: true, extraMuted, muted, default.\n   */\n  borderLeft: StringAndBoolPropType\n}\n\nexport default Pane\n"]},"metadata":{},"sourceType":"module"}