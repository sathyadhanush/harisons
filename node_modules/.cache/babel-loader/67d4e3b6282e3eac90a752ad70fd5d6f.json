{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { memo, useMemo, useRef, useState, useEffect, useCallback } from 'react';\nimport { css } from 'glamor';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport Box from 'ui-box';\nimport Alert from '../../alert/src/Alert';\nvar animationEasing = {\n  deceleration: 'cubic-bezier(0.0, 0.0, 0.2, 1)',\n  acceleration: 'cubic-bezier(0.4, 0.0, 1, 1)',\n  spring: 'cubic-bezier(0.175, 0.885, 0.320, 1.175)'\n};\nvar ANIMATION_DURATION = 240;\nvar openAnimation = css.keyframes('openAnimation', {\n  from: {\n    opacity: 0,\n    transform: 'translateY(-120%)'\n  },\n  to: {\n    transform: 'translateY(0)'\n  }\n});\nvar closeAnimation = css.keyframes('closeAnimation', {\n  from: {\n    transform: 'scale(1)',\n    opacity: 1\n  },\n  to: {\n    transform: 'scale(0.9)',\n    opacity: 0\n  }\n});\nvar animationStyles = css({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  height: 0,\n  transition: \"all \".concat(ANIMATION_DURATION, \"ms \").concat(animationEasing.deceleration),\n  '&[data-state=\"entering\"], &[data-state=\"entered\"]': {\n    animation: \"\".concat(openAnimation, \" \").concat(ANIMATION_DURATION, \"ms \").concat(animationEasing.spring, \" both\")\n  },\n  '&[data-state=\"exiting\"]': {\n    animation: \"\".concat(closeAnimation, \" 120ms \").concat(animationEasing.acceleration, \" both\")\n  }\n});\nvar Toast = /*#__PURE__*/memo(function Toast(props) {\n  var children = props.children,\n      duration = props.duration,\n      hasCloseButton = props.hasCloseButton,\n      _props$intent = props.intent,\n      intent = _props$intent === void 0 ? 'none' : _props$intent,\n      isShownProp = props.isShown,\n      onRemove = props.onRemove,\n      title = props.title,\n      zIndex = props.zIndex;\n  var transitionRef = useRef(null);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isShown = _useState2[0],\n      setIsShown = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      height = _useState4[0],\n      setHeight = _useState4[1];\n\n  var closeTimer = useRef(null);\n  var clearCloseTimer = useCallback(function () {\n    if (closeTimer.current) {\n      clearTimeout(closeTimer.current);\n      closeTimer.current = null;\n    }\n  }, []);\n  var close = useCallback(function () {\n    clearCloseTimer();\n    setIsShown(false);\n  }, [clearCloseTimer]);\n  var startCloseTimer = useCallback(function () {\n    if (duration) {\n      clearCloseTimer();\n      closeTimer.current = setTimeout(function () {\n        close();\n      }, duration * 1000);\n    }\n  }, [duration, clearCloseTimer, close]);\n  useEffect(function () {\n    startCloseTimer();\n    return function () {\n      clearCloseTimer();\n    };\n  }, [startCloseTimer, clearCloseTimer]);\n  useEffect(function () {\n    if (isShownProp !== isShown && typeof isShownProp === 'boolean') {\n      setIsShown(isShownProp);\n    }\n  }, [isShown, isShownProp]);\n  var handleMouseEnter = useCallback(function () {\n    return clearCloseTimer();\n  }, [clearCloseTimer]);\n  var handleMouseLeave = useCallback(function () {\n    return startCloseTimer();\n  }, [startCloseTimer]);\n  var onRef = useCallback(function (ref) {\n    if (ref === null) return;\n\n    var _ref$getBoundingClien = ref.getBoundingClientRect(),\n        rectHeight = _ref$getBoundingClien.height;\n\n    setHeight(rectHeight);\n  }, []);\n  var styles = useMemo(function () {\n    return {\n      height: height,\n      zIndex: zIndex,\n      marginBottom: isShown ? 0 : -height\n    };\n  }, [isShown, height, zIndex]);\n  return /*#__PURE__*/React.createElement(Transition, {\n    nodeRef: transitionRef,\n    appear: true,\n    unmountOnExit: true,\n    timeout: ANIMATION_DURATION,\n    \"in\": isShown,\n    onExited: onRemove\n  }, function (state) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: transitionRef,\n      \"data-state\": state,\n      className: animationStyles,\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      style: styles\n    }, /*#__PURE__*/React.createElement(Box, {\n      ref: onRef,\n      padding: 8\n    }, /*#__PURE__*/React.createElement(Alert, {\n      flexShrink: 0,\n      appearance: \"card\",\n      elevation: 3,\n      intent: intent,\n      title: title,\n      isRemoveable: hasCloseButton,\n      onRemove: close,\n      pointerEvents: \"all\"\n    }, children)));\n  });\n});\nToast.propTypes = {\n  /**\n   * The z-index of the toast.\n   */\n  zIndex: PropTypes.number,\n\n  /**\n   * Duration of the toast.\n   */\n  duration: PropTypes.number,\n\n  /**\n   * Function called when the toast is all the way closed.\n   */\n  onRemove: PropTypes.func,\n\n  /**\n   * The type of the alert.\n   */\n  intent: PropTypes.string,\n\n  /**\n   * The title of the alert.\n   */\n  title: PropTypes.node,\n\n  /**\n   * Description of the alert.\n   */\n  children: PropTypes.node,\n\n  /**\n   * When true, show a close icon button inside of the toast.\n   */\n  hasCloseButton: PropTypes.bool,\n\n  /**\n   * When false, will close the Toast and call onRemove when finished.\n   */\n  isShown: PropTypes.bool\n};\nexport default Toast;","map":{"version":3,"sources":["../../../src/toaster/src/Toast.js"],"names":["animationEasing","deceleration","acceleration","spring","ANIMATION_DURATION","openAnimation","from","opacity","transform","to","closeAnimation","animationStyles","css","display","flexDirection","alignItems","height","transition","animation","Toast","memo","children","duration","hasCloseButton","intent","isShownProp","onRemove","title","zIndex","props","transitionRef","useRef","isShown","setIsShown","useState","setHeight","closeTimer","clearCloseTimer","useCallback","clearTimeout","close","startCloseTimer","setTimeout","useEffect","handleMouseEnter","handleMouseLeave","onRef","ref","rectHeight","styles","useMemo","marginBottom","PropTypes","bool"],"mappings":"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","sourcesContent":["import React, { memo, useMemo, useRef, useState, useEffect, useCallback } from 'react'\nimport { css } from 'glamor'\nimport PropTypes from 'prop-types'\nimport { Transition } from 'react-transition-group'\nimport Box from 'ui-box'\nimport Alert from '../../alert/src/Alert'\n\nconst animationEasing = {\n  deceleration: 'cubic-bezier(0.0, 0.0, 0.2, 1)',\n  acceleration: 'cubic-bezier(0.4, 0.0, 1, 1)',\n  spring: 'cubic-bezier(0.175, 0.885, 0.320, 1.175)'\n}\n\nconst ANIMATION_DURATION = 240\n\nconst openAnimation = css.keyframes('openAnimation', {\n  from: {\n    opacity: 0,\n    transform: 'translateY(-120%)'\n  },\n  to: {\n    transform: 'translateY(0)'\n  }\n})\n\nconst closeAnimation = css.keyframes('closeAnimation', {\n  from: {\n    transform: 'scale(1)',\n    opacity: 1\n  },\n  to: {\n    transform: 'scale(0.9)',\n    opacity: 0\n  }\n})\n\nconst animationStyles = css({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  height: 0,\n  transition: `all ${ANIMATION_DURATION}ms ${animationEasing.deceleration}`,\n  '&[data-state=\"entering\"], &[data-state=\"entered\"]': {\n    animation: `${openAnimation} ${ANIMATION_DURATION}ms ${animationEasing.spring} both`\n  },\n  '&[data-state=\"exiting\"]': {\n    animation: `${closeAnimation} 120ms ${animationEasing.acceleration} both`\n  }\n})\n\nconst Toast = memo(function Toast(props) {\n  const {\n    children,\n    duration,\n    hasCloseButton,\n    // Template props\n    intent = 'none',\n    isShown: isShownProp,\n    onRemove,\n    title,\n    zIndex\n  } = props\n\n  const transitionRef = useRef(null)\n  const [isShown, setIsShown] = useState(true)\n  const [height, setHeight] = useState(0)\n  const closeTimer = useRef(null)\n\n  const clearCloseTimer = useCallback(() => {\n    if (closeTimer.current) {\n      clearTimeout(closeTimer.current)\n      closeTimer.current = null\n    }\n  }, [])\n\n  const close = useCallback(() => {\n    clearCloseTimer()\n    setIsShown(false)\n  }, [clearCloseTimer])\n\n  const startCloseTimer = useCallback(() => {\n    if (duration) {\n      clearCloseTimer()\n      closeTimer.current = setTimeout(() => {\n        close()\n      }, duration * 1000)\n    }\n  }, [duration, clearCloseTimer, close])\n\n  useEffect(() => {\n    startCloseTimer()\n\n    return () => {\n      clearCloseTimer()\n    }\n  }, [startCloseTimer, clearCloseTimer])\n\n  useEffect(() => {\n    if (isShownProp !== isShown && typeof isShownProp === 'boolean') {\n      setIsShown(isShownProp)\n    }\n  }, [isShown, isShownProp])\n\n  const handleMouseEnter = useCallback(() => clearCloseTimer(), [clearCloseTimer])\n  const handleMouseLeave = useCallback(() => startCloseTimer(), [startCloseTimer])\n\n  const onRef = useCallback(ref => {\n    if (ref === null) return\n\n    const { height: rectHeight } = ref.getBoundingClientRect()\n    setHeight(rectHeight)\n  }, [])\n\n  const styles = useMemo(\n    () => ({\n      height,\n      zIndex,\n      marginBottom: isShown ? 0 : -height\n    }),\n    [isShown, height, zIndex]\n  )\n\n  return (\n    <Transition\n      nodeRef={transitionRef}\n      appear\n      unmountOnExit\n      timeout={ANIMATION_DURATION}\n      in={isShown}\n      onExited={onRemove}\n    >\n      {state => (\n        <div\n          ref={transitionRef}\n          data-state={state}\n          className={animationStyles}\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n          style={styles}\n        >\n          <Box ref={onRef} padding={8}>\n            <Alert\n              flexShrink={0}\n              appearance=\"card\"\n              elevation={3}\n              intent={intent}\n              title={title}\n              isRemoveable={hasCloseButton}\n              onRemove={close}\n              pointerEvents=\"all\"\n            >\n              {children}\n            </Alert>\n          </Box>\n        </div>\n      )}\n    </Transition>\n  )\n})\n\nToast.propTypes = {\n  /**\n   * The z-index of the toast.\n   */\n  zIndex: PropTypes.number,\n\n  /**\n   * Duration of the toast.\n   */\n  duration: PropTypes.number,\n\n  /**\n   * Function called when the toast is all the way closed.\n   */\n  onRemove: PropTypes.func,\n\n  /**\n   * The type of the alert.\n   */\n  intent: PropTypes.string,\n\n  /**\n   * The title of the alert.\n   */\n  title: PropTypes.node,\n\n  /**\n   * Description of the alert.\n   */\n  children: PropTypes.node,\n\n  /**\n   * When true, show a close icon button inside of the toast.\n   */\n  hasCloseButton: PropTypes.bool,\n\n  /**\n   * When false, will close the Toast and call onRemove when finished.\n   */\n  isShown: PropTypes.bool\n}\n\nexport default Toast\n"]},"metadata":{},"sourceType":"module"}