{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"appearance\", \"children\", \"className\", \"hasIcon\", \"intent\", \"isRemoveable\", \"onRemove\", \"title\"],\n    _excluded2 = [\"className\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { spacing, dimensions, position, layout } from 'ui-box';\nimport { IconButton } from '../../buttons';\nimport { useStyleConfig } from '../../hooks';\nimport { CrossIcon } from '../../icons';\nimport { Pane } from '../../layers';\nimport { Heading, Paragraph } from '../../typography';\nimport { getIconForIntent } from './getIconForIntent';\nvar pseudoSelectors = {};\nvar internalStyles = {\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'flex',\n  // 15 instead of 16 in order to maintain height with 1px border\n  padding: '15px'\n};\nvar Alert = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Alert(props, ref) {\n  var _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      children = props.children,\n      className = props.className,\n      _props$hasIcon = props.hasIcon,\n      hasIcon = _props$hasIcon === void 0 ? true : _props$hasIcon,\n      _props$intent = props.intent,\n      intent = _props$intent === void 0 ? 'info' : _props$intent,\n      _props$isRemoveable = props.isRemoveable,\n      isRemoveable = _props$isRemoveable === void 0 ? false : _props$isRemoveable,\n      onRemove = props.onRemove,\n      title = props.title,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var intentToken = intent === 'none' ? 'info' : intent;\n\n  var _useStyleConfig = useStyleConfig('Alert', {\n    appearance: appearance,\n    intent: intentToken\n  }, pseudoSelectors, internalStyles),\n      themedClassName = _useStyleConfig.className,\n      styleProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  return /*#__PURE__*/React.createElement(Pane, _extends({\n    ref: ref,\n    className: cx(className, themedClassName),\n    role: \"alert\"\n  }, styleProps, restProps), hasIcon && /*#__PURE__*/React.createElement(Pane, {\n    marginRight: 16,\n    marginLeft: 2,\n    marginTop: -1,\n    display: \"flex\",\n    alignItems: \"flex-start\"\n  }, getIconForIntent(intentToken, {\n    size: 16\n  })), /*#__PURE__*/React.createElement(Pane, {\n    flex: 1\n  }, title && /*#__PURE__*/React.createElement(Heading, {\n    is: \"h4\",\n    size: 400,\n    marginTop: 0,\n    marginBottom: 0,\n    fontWeight: 500,\n    lineHeight: 1 // Get this from the theme / props on the Alert\n    ,\n    color: \"inherit\"\n  }, title), typeof children === 'string' ? /*#__PURE__*/React.createElement(Paragraph, {\n    size: 400,\n    color: \"muted\",\n    marginTop: title ? 8 : 0,\n    lineHeight: 1\n  }, children) : /*#__PURE__*/React.createElement(Pane, null, children)), isRemoveable && /*#__PURE__*/React.createElement(Pane, {\n    marginLeft: 24,\n    flexShrink: 0,\n    marginBottom: -2,\n    marginTop: -4,\n    marginRight: -4\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    icon: CrossIcon,\n    appearance: \"minimal\",\n    height: 24,\n    onClick: onRemove,\n    intent: intentToken\n  })));\n}));\nAlert.propTypes = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, spacing.propTypes), position.propTypes), layout.propTypes), dimensions.propTypes), {}, {\n  /**\n   * The content of the alert. When a string is passed it is wrapped in a `<Text size={400} />` component.\n   */\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /**\n   * The intent of the alert.\n   */\n  intent: PropTypes.string,\n\n  /**\n   * The title of the alert.\n   */\n  title: PropTypes.node,\n\n  /**\n   * When true, show a icon on the left matching the type,\n   */\n  hasIcon: PropTypes.bool,\n\n  /**\n   * When true, show a remove icon button.\n   */\n  isRemoveable: PropTypes.bool,\n\n  /**\n   * Function called when the remove button is clicked.\n   */\n  onRemove: PropTypes.func,\n\n  /**\n   * The appearance of the alert.\n   */\n  appearance: PropTypes.oneOf(['default', 'card'])\n});\nexport default Alert;","map":{"version":3,"sources":["../../../src/alert/src/Alert.js"],"names":["pseudoSelectors","internalStyles","position","overflow","display","padding","Alert","memo","forwardRef","appearance","children","className","hasIcon","intent","isRemoveable","onRemove","title","restProps","props","intentToken","themedClassName","styleProps","useStyleConfig","cx","getIconForIntent","size","spacing","layout","dimensions","PropTypes"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport { spacing, dimensions, position, layout } from 'ui-box'\nimport { IconButton } from '../../buttons'\nimport { useStyleConfig } from '../../hooks'\nimport { CrossIcon } from '../../icons'\nimport { Pane } from '../../layers'\nimport { Heading, Paragraph } from '../../typography'\nimport { getIconForIntent } from './getIconForIntent'\n\nconst pseudoSelectors = {}\n\nconst internalStyles = {\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'flex',\n  // 15 instead of 16 in order to maintain height with 1px border\n  padding: '15px'\n}\n\nconst Alert = memo(\n  forwardRef(function Alert(props, ref) {\n    const {\n      appearance = 'default',\n      children,\n      className,\n      hasIcon = true,\n      intent = 'info',\n      isRemoveable = false,\n      onRemove,\n      title,\n      ...restProps\n    } = props\n\n    const intentToken = intent === 'none' ? 'info' : intent\n    const { className: themedClassName, ...styleProps } = useStyleConfig(\n      'Alert',\n      { appearance, intent: intentToken },\n      pseudoSelectors,\n      internalStyles\n    )\n\n    return (\n      <Pane ref={ref} className={cx(className, themedClassName)} role=\"alert\" {...styleProps} {...restProps}>\n        {hasIcon && (\n          <Pane marginRight={16} marginLeft={2} marginTop={-1} display=\"flex\" alignItems=\"flex-start\">\n            {getIconForIntent(intentToken, { size: 16 })}\n          </Pane>\n        )}\n        <Pane flex={1}>\n          {title && (\n            <Heading\n              is=\"h4\"\n              size={400}\n              marginTop={0}\n              marginBottom={0}\n              fontWeight={500}\n              lineHeight={1}\n              // Get this from the theme / props on the Alert\n              color=\"inherit\"\n            >\n              {title}\n            </Heading>\n          )}\n          {typeof children === 'string' ? (\n            <Paragraph size={400} color=\"muted\" marginTop={title ? 8 : 0} lineHeight={1}>\n              {children}\n            </Paragraph>\n          ) : (\n            <Pane>{children}</Pane>\n          )}\n        </Pane>\n        {isRemoveable && (\n          <Pane marginLeft={24} flexShrink={0} marginBottom={-2} marginTop={-4} marginRight={-4}>\n            <IconButton icon={CrossIcon} appearance=\"minimal\" height={24} onClick={onRemove} intent={intentToken} />\n          </Pane>\n        )}\n      </Pane>\n    )\n  })\n)\n\nAlert.propTypes = {\n  /**\n   * Composes some Box APIs.\n   */\n  ...spacing.propTypes,\n  ...position.propTypes,\n  ...layout.propTypes,\n  ...dimensions.propTypes,\n\n  /**\n   * The content of the alert. When a string is passed it is wrapped in a `<Text size={400} />` component.\n   */\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /**\n   * The intent of the alert.\n   */\n  intent: PropTypes.string,\n\n  /**\n   * The title of the alert.\n   */\n  title: PropTypes.node,\n  /**\n   * When true, show a icon on the left matching the type,\n   */\n  hasIcon: PropTypes.bool,\n\n  /**\n   * When true, show a remove icon button.\n   */\n  isRemoveable: PropTypes.bool,\n\n  /**\n   * Function called when the remove button is clicked.\n   */\n  onRemove: PropTypes.func,\n\n  /**\n   * The appearance of the alert.\n   */\n  appearance: PropTypes.oneOf(['default', 'card'])\n}\n\nexport default Alert\n"]},"metadata":{},"sourceType":"module"}