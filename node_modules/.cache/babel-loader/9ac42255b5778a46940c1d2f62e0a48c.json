{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\", \"disabled\", \"height\", \"isHighlighted\", \"isSelectable\", \"isSelected\", \"item\", \"onDeselect\", \"onSelect\", \"style\"],\n    _excluded2 = [\"className\"];\nimport React, { memo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useStyleConfig } from '../../hooks';\nimport { Pane } from '../../layers';\nimport TableRow from '../../table/src/TableRow';\nimport TextTableCell from '../../table/src/TextTableCell';\nexport var pseudoSelectors = {\n  _active: '&[aria-current=\"true\"]:active, &[data-isselectable=\"true\"]:active',\n  _before: '&:before',\n  _disabled: '&[disabled]',\n  _focus: ':focus',\n  _hover: ':hover',\n  _isSelectable: '&[data-isselectable=\"true\"]',\n  _selected: '&[aria-current=\"true\"]'\n};\nvar internalStyles = {\n  alignItems: 'center',\n  display: 'flex'\n};\nvar emptyObject = {};\nvar Option = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Option(props, ref) {\n  var children = props.children,\n      disabled = props.disabled,\n      height = props.height,\n      isHighlighted = props.isHighlighted,\n      isSelectable = props.isSelectable,\n      isSelected = props.isSelected,\n      item = props.item,\n      onDeselect = props.onDeselect,\n      onSelect = props.onSelect,\n      style = props.style,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useStyleConfig = useStyleConfig('Option', emptyObject, pseudoSelectors, internalStyles),\n      themedClassName = _useStyleConfig.className,\n      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  return /*#__PURE__*/React.createElement(TableRow, _extends({\n    className: themedClassName,\n    isSelectable: isSelectable && !disabled,\n    isHighlighted: isHighlighted,\n    onSelect: onSelect,\n    onDeselect: onDeselect,\n    isSelected: isSelected,\n    style: style\n  }, boxProps, rest, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(TextTableCell, {\n    borderRight: null,\n    flex: 1,\n    alignSelf: \"stretch\",\n    height: height,\n    cursor: disabled ? 'default' : 'pointer'\n  }, /*#__PURE__*/React.createElement(Pane, {\n    alignItems: \"center\",\n    display: \"flex\"\n  }, children)));\n}));\nOption.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  disabled: PropTypes.bool,\n  height: PropTypes.number,\n  isHighlighted: PropTypes.bool,\n  isSelectable: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  item: PropTypes.any,\n  onDeselect: PropTypes.func,\n  onSelect: PropTypes.func,\n  style: PropTypes.any\n};\nexport default Option;","map":{"version":3,"sources":["../../../src/select-menu/src/Option.js"],"names":["pseudoSelectors","_active","_before","_disabled","_focus","_hover","_isSelectable","_selected","internalStyles","alignItems","display","emptyObject","Option","memo","forwardRef","children","disabled","height","isHighlighted","isSelectable","isSelected","item","onDeselect","onSelect","style","rest","props","themedClassName","boxProps","useStyleConfig","ref","PropTypes","any"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { useStyleConfig } from '../../hooks'\nimport { Pane } from '../../layers'\nimport TableRow from '../../table/src/TableRow'\nimport TextTableCell from '../../table/src/TextTableCell'\n\nexport const pseudoSelectors = {\n  _active: '&[aria-current=\"true\"]:active, &[data-isselectable=\"true\"]:active',\n  _before: '&:before',\n  _disabled: '&[disabled]',\n  _focus: ':focus',\n  _hover: ':hover',\n  _isSelectable: '&[data-isselectable=\"true\"]',\n  _selected: '&[aria-current=\"true\"]'\n}\n\nconst internalStyles = {\n  alignItems: 'center',\n  display: 'flex'\n}\n\nconst emptyObject = {}\n\nconst Option = memo(\n  forwardRef(function Option(props, ref) {\n    const {\n      children,\n      disabled,\n      height,\n      isHighlighted,\n      isSelectable,\n      isSelected,\n      item,\n      onDeselect,\n      onSelect,\n      style,\n      ...rest\n    } = props\n\n    const { className: themedClassName, ...boxProps } = useStyleConfig(\n      'Option',\n      emptyObject,\n      pseudoSelectors,\n      internalStyles\n    )\n\n    return (\n      <TableRow\n        className={themedClassName}\n        isSelectable={isSelectable && !disabled}\n        isHighlighted={isHighlighted}\n        onSelect={onSelect}\n        onDeselect={onDeselect}\n        isSelected={isSelected}\n        style={style}\n        {...boxProps}\n        {...rest}\n        ref={ref}\n      >\n        <TextTableCell\n          borderRight={null}\n          flex={1}\n          alignSelf=\"stretch\"\n          height={height}\n          cursor={disabled ? 'default' : 'pointer'}\n        >\n          <Pane alignItems=\"center\" display=\"flex\">\n            {children}\n          </Pane>\n        </TextTableCell>\n      </TableRow>\n    )\n  })\n)\n\nOption.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  disabled: PropTypes.bool,\n  height: PropTypes.number,\n  isHighlighted: PropTypes.bool,\n  isSelectable: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  item: PropTypes.any,\n  onDeselect: PropTypes.func,\n  onSelect: PropTypes.func,\n  style: PropTypes.any\n}\n\nexport default Option\n"]},"metadata":{},"sourceType":"module"}