{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\", \"icon\", \"iconColor\", \"size\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { IconWrapper } from '../../icons/src/IconWrapper';\nimport { minorScale } from '../../scales';\nimport Text from './Text';\nvar ListItem = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function ListItem(props, ref) {\n  var children = props.children,\n      icon = props.icon,\n      iconColor = props.iconColor,\n      size = props.size,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var paddingLeft;\n  if (size === 300) paddingLeft = minorScale(1);\n  if (size === 400) paddingLeft = minorScale(2);\n  if (size === 500) paddingLeft = minorScale(2);\n  if (size === 600) paddingLeft = minorScale(3);\n  var iconTop;\n  if (size === 300) iconTop = 1;\n  if (size === 400) iconTop = 3;\n  if (size === 500) iconTop = 3;\n  if (size === 600) iconTop = 4;\n  var iconSize;\n  if (size === 300) iconSize = 12;\n  if (size === 400) iconSize = 14;\n  if (size === 500) iconSize = 14;\n  if (size === 600) iconSize = 16;\n  var iconLeft = -iconSize - 4;\n  if (size === 600) iconLeft = -iconSize;\n  return /*#__PURE__*/React.createElement(Text, _extends({\n    is: \"li\",\n    position: \"relative\",\n    marginY: \"0.5em\",\n    size: size,\n    listStyleType: icon ? 'none' : undefined,\n    paddingLeft: icon ? paddingLeft : undefined,\n    ref: ref\n  }, rest), icon && /*#__PURE__*/React.createElement(IconWrapper, {\n    icon: icon,\n    color: iconColor,\n    position: \"absolute\",\n    size: iconSize,\n    left: iconLeft,\n    top: iconTop\n  }), children);\n}));\nListItem.propTypes = _objectSpread(_objectSpread({}, Text.propTypes), {}, {\n  /**\n   * When provided, adds a icon before the list item.\n   */\n  icon: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n\n  /**\n   * The color of the icon.\n   */\n  iconColor: PropTypes.string\n});\nexport default ListItem;","map":{"version":3,"sources":["../../../src/typography/src/ListItem.js"],"names":["ListItem","memo","forwardRef","children","icon","iconColor","size","rest","props","paddingLeft","minorScale","iconTop","iconSize","iconLeft","ref","Text","PropTypes","string"],"mappings":"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","sourcesContent":["import React, { forwardRef, memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { IconWrapper } from '../../icons/src/IconWrapper'\nimport { minorScale } from '../../scales'\nimport Text from './Text'\n\nconst ListItem = memo(\n  forwardRef(function ListItem(props, ref) {\n    const { children, icon, iconColor, size, ...rest } = props\n\n    let paddingLeft\n    if (size === 300) paddingLeft = minorScale(1)\n    if (size === 400) paddingLeft = minorScale(2)\n    if (size === 500) paddingLeft = minorScale(2)\n    if (size === 600) paddingLeft = minorScale(3)\n\n    let iconTop\n    if (size === 300) iconTop = 1\n    if (size === 400) iconTop = 3\n    if (size === 500) iconTop = 3\n    if (size === 600) iconTop = 4\n\n    let iconSize\n    if (size === 300) iconSize = 12\n    if (size === 400) iconSize = 14\n    if (size === 500) iconSize = 14\n    if (size === 600) iconSize = 16\n\n    let iconLeft = -iconSize - 4\n    if (size === 600) iconLeft = -iconSize\n\n    return (\n      <Text\n        is=\"li\"\n        position=\"relative\"\n        marginY=\"0.5em\"\n        size={size}\n        listStyleType={icon ? 'none' : undefined}\n        paddingLeft={icon ? paddingLeft : undefined}\n        ref={ref}\n        {...rest}\n      >\n        {icon && (\n          <IconWrapper\n            icon={icon}\n            color={iconColor}\n            position=\"absolute\"\n            size={iconSize}\n            left={iconLeft}\n            top={iconTop}\n          />\n        )}\n        {children}\n      </Text>\n    )\n  })\n)\n\nListItem.propTypes = {\n  ...Text.propTypes,\n\n  /**\n   * When provided, adds a icon before the list item.\n   */\n  icon: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n\n  /**\n   * The color of the icon.\n   */\n  iconColor: PropTypes.string\n}\n\nexport default ListItem\n"]},"metadata":{},"sourceType":"module"}