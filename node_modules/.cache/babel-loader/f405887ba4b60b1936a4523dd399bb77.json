{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"appearance\", \"description\", \"disabled\", \"hint\", \"id\", \"inputHeight\", \"inputWidth\", \"isInvalid\", \"label\", \"placeholder\", \"required\", \"resize\", \"spellCheck\", \"validationMessage\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { splitBoxProps } from 'ui-box';\nimport { FormField } from '../../form-field';\nimport { useId } from '../../hooks';\nimport Textarea from './Textarea';\nvar TextareaField = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function TextareaField(props, ref) {\n  var id = useId('TextareaField', props.id);\n\n  var appearance = props.appearance,\n      description = props.description,\n      disabled = props.disabled,\n      hint = props.hint,\n      unusedId = props.id,\n      _props$inputHeight = props.inputHeight,\n      inputHeight = _props$inputHeight === void 0 ? 80 : _props$inputHeight,\n      _props$inputWidth = props.inputWidth,\n      inputWidth = _props$inputWidth === void 0 ? '100%' : _props$inputWidth,\n      isInvalid = props.isInvalid,\n      label = props.label,\n      placeholder = props.placeholder,\n      required = props.required,\n      resize = props.resize,\n      spellCheck = props.spellCheck,\n      validationMessage = props.validationMessage,\n      rest = _objectWithoutProperties(props, _excluded);\n  /**\n   * Split the wrapper props from the input props.\n   */\n\n\n  var _splitBoxProps = splitBoxProps(rest),\n      matchedProps = _splitBoxProps.matchedProps,\n      remainingProps = _splitBoxProps.remainingProps;\n\n  return /*#__PURE__*/React.createElement(FormField, _extends({\n    marginBottom: 24,\n    label: label,\n    isRequired: required,\n    hint: hint,\n    description: description,\n    validationMessage: validationMessage,\n    labelFor: id\n  }, matchedProps), /*#__PURE__*/React.createElement(Textarea, _extends({\n    id: id,\n    ref: ref,\n    width: inputWidth,\n    height: inputHeight,\n    disabled: disabled,\n    required: required,\n    isInvalid: isInvalid,\n    appearance: appearance,\n    placeholder: placeholder,\n    spellCheck: spellCheck,\n    resize: resize\n  }, remainingProps)));\n}));\nTextareaField.propTypes = _objectSpread(_objectSpread(_objectSpread({}, Textarea.propTypes), FormField.propTypes), {}, {\n  /**\n   * The label used above the input element.\n   */\n  label: PropTypes.node.isRequired,\n\n  /**\n   * Whether or not to show an asterix after the label.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * An optional description of the field under the label, above the input element.\n   */\n  description: PropTypes.node,\n\n  /**\n   * An optional hint under the input element.\n   */\n  hint: PropTypes.node,\n\n  /**\n   * If a validation message is passed it is shown under the input element\n   * and above the hint. This is unaffected by `isInvalid`.\n   */\n  validationMessage: PropTypes.node,\n\n  /**\n   * The height of the input element.\n   */\n  inputHeight: PropTypes.number,\n\n  /**\n   * The width of the input width.\n   */\n  inputWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n});\nexport default TextareaField;","map":{"version":3,"sources":["../../../src/textarea/src/TextareaField.js"],"names":["TextareaField","memo","forwardRef","id","useId","props","appearance","description","disabled","hint","unusedId","inputHeight","inputWidth","isInvalid","label","placeholder","required","resize","spellCheck","validationMessage","rest","matchedProps","remainingProps","splitBoxProps","Textarea","FormField","PropTypes"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { splitBoxProps } from 'ui-box'\nimport { FormField } from '../../form-field'\nimport { useId } from '../../hooks'\nimport Textarea from './Textarea'\n\nconst TextareaField = memo(\n  forwardRef(function TextareaField(props, ref) {\n    const id = useId('TextareaField', props.id)\n\n    const {\n      // We are using the id from the state\n      appearance,\n\n      // FormField props\n      description,\n      disabled,\n      hint,\n      id: unusedId,\n\n      // Textarea props\n      inputHeight = 80,\n      /** The input width should be as wide as the form field. */\n      inputWidth = '100%',\n      isInvalid,\n      label,\n      placeholder,\n      required,\n      resize,\n      spellCheck,\n      validationMessage,\n\n      // Rest props are spread on the FormField\n      ...rest\n    } = props\n\n    /**\n     * Split the wrapper props from the input props.\n     */\n    const { matchedProps, remainingProps } = splitBoxProps(rest)\n\n    return (\n      <FormField\n        marginBottom={24}\n        label={label}\n        isRequired={required}\n        hint={hint}\n        description={description}\n        validationMessage={validationMessage}\n        labelFor={id}\n        {...matchedProps}\n      >\n        <Textarea\n          id={id}\n          ref={ref}\n          width={inputWidth}\n          height={inputHeight}\n          disabled={disabled}\n          required={required}\n          isInvalid={isInvalid}\n          appearance={appearance}\n          placeholder={placeholder}\n          spellCheck={spellCheck}\n          resize={resize}\n          {...remainingProps}\n        />\n      </FormField>\n    )\n  })\n)\n\nTextareaField.propTypes = {\n  /**\n   * Composes the Textarea component as the base.\n   */\n  ...Textarea.propTypes,\n  ...FormField.propTypes,\n\n  /**\n   * The label used above the input element.\n   */\n  label: PropTypes.node.isRequired,\n\n  /**\n   * Whether or not to show an asterix after the label.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * An optional description of the field under the label, above the input element.\n   */\n  description: PropTypes.node,\n\n  /**\n   * An optional hint under the input element.\n   */\n  hint: PropTypes.node,\n\n  /**\n   * If a validation message is passed it is shown under the input element\n   * and above the hint. This is unaffected by `isInvalid`.\n   */\n  validationMessage: PropTypes.node,\n\n  /**\n   * The height of the input element.\n   */\n  inputHeight: PropTypes.number,\n\n  /**\n   * The width of the input width.\n   */\n  inputWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n}\n\nexport default TextareaField\n"]},"metadata":{},"sourceType":"module"}