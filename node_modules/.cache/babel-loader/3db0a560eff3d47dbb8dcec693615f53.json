{"ast":null,"code":"/**\n * Returns whether or not the given MimeType is an image\n * @param {string} mimeType MimeType to test\n * @returns {boolean}\n */\nvar isImage = function isImage(mimeType) {\n  var _mimeType$includes;\n\n  return (_mimeType$includes = mimeType === null || mimeType === void 0 ? void 0 : mimeType.includes('image')) !== null && _mimeType$includes !== void 0 ? _mimeType$includes : false;\n};\n\nexport default isImage;","map":{"version":3,"sources":["../../../../src/file-uploader/src/utils/is-image.js"],"names":["isImage","mimeType"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAAA,QAAA,EAAQ;AAAA,MAAA,kBAAA;;AAAA,SAAA,CAAA,kBAAA,GAAIC,QAAJ,KAAA,IAAIA,IAAAA,QAAJ,KAAA,KAAA,CAAIA,GAAJ,KAAA,CAAIA,GAAAA,QAAQ,CAARA,QAAAA,CAAJ,OAAIA,CAAJ,MAAA,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,kBAAA,GAAA,KAAA;AAAxB,CAAA;;AAEA,eAAA,OAAA","sourcesContent":["/**\n * Returns whether or not the given MimeType is an image\n * @param {string} mimeType MimeType to test\n * @returns {boolean}\n */\nconst isImage = mimeType => mimeType?.includes('image') ?? false\n\nexport default isImage\n"]},"metadata":{},"sourceType":"module"}