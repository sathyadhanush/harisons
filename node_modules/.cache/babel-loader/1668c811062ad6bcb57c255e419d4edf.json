{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"size\"],\n    _excluded2 = [\"className\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { useStyleConfig } from '../../hooks';\nvar pseudoSelectors = {};\nvar internalStyles = {};\nvar Label = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Label(props, ref) {\n  var className = props.className,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 400 : _props$size,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var _useStyleConfig = useStyleConfig('Label', {\n    size: size\n  }, pseudoSelectors, internalStyles),\n      themedClassName = _useStyleConfig.className,\n      boxProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    is: \"label\",\n    ref: ref,\n    className: cx(themedClassName, className)\n  }, boxProps, restProps));\n}));\nLabel.propTypes = _objectSpread(_objectSpread({}, Box.propTypes), {}, {\n  /**\n   * The size of the label.\n   */\n  size: PropTypes.oneOf([100, 200, 300, 400, 500, 600, 700, 800, 900])\n});\nexport default Label;","map":{"version":3,"sources":["../../../src/typography/src/Label.js"],"names":["pseudoSelectors","internalStyles","Label","memo","forwardRef","className","size","restProps","props","themedClassName","boxProps","useStyleConfig","cx","Box","PropTypes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,OAAA,EAAA,MAAA,YAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,GAAA,MAAA,QAAA;AACA,SAAA,cAAA,QAAA,aAAA;AAEA,IAAMA,eAAe,GAArB,EAAA;AACA,IAAMC,cAAc,GAApB,EAAA;AAEA,IAAMC,KAAK,GAAA,aAAGC,IAAI,EAAA,aAChBC,UAAU,CAAC,SAAA,KAAA,CAAA,KAAA,EAAA,GAAA,EAA2B;AACpC,MAAQC,SAAR,GAAgDG,KAAhD,CAAA,SAAA;AAAA,MAAA,WAAA,GAAgDA,KAAhD,CAAA,IAAA;AAAA,MAAmBF,IAAnB,GAAA,WAAA,KAAA,KAAA,CAAA,GAAA,GAAA,GAAA,WAAA;AAAA,MAAkCC,SAAlC,GAAA,wBAAA,CAAA,KAAA,EAAA,SAAA,CAAA;;AAEA,MAAA,eAAA,GAAoDI,cAAc,CAAA,OAAA,EAEhE;AAAEL,IAAAA,IAAI,EAAJA;AAAF,GAFgE,EAAA,eAAA,EAAlE,cAAkE,CAAlE;AAAA,MAAmBG,eAAnB,GAAA,eAAA,CAAA,SAAA;AAAA,MAAuCC,QAAvC,GAAA,wBAAA,CAAA,eAAA,EAAA,UAAA,CAAA;;AAOA,SAAA,aAAO,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA;AAAK,IAAA,EAAE,EAAP,OAAA;AAAgB,IAAA,GAAG,EAAnB,GAAA;AAA0B,IAAA,SAAS,EAAEE,EAAE,CAAA,eAAA,EAAA,SAAA;AAAvC,GAAA,EAAA,QAAA,EAAP,SAAO,CAAA,CAAP;AAXJ,CACY,CADM,CAAlB;AAeAV,KAAK,CAALA,SAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EAIKW,GAAG,CAJRX,SAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAME;AACF;AACA;AACEI,EAAAA,IAAI,EAAEQ,SAAS,CAATA,KAAAA,CAAgB,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAhBA,GAAgB,CAAhBA;AATRZ,CAAAA,CAAAA;AAYA,eAAA,KAAA","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport Box from 'ui-box'\nimport { useStyleConfig } from '../../hooks'\n\nconst pseudoSelectors = {}\nconst internalStyles = {}\n\nconst Label = memo(\n  forwardRef(function Label(props, ref) {\n    const { className, size = 400, ...restProps } = props\n\n    const { className: themedClassName, ...boxProps } = useStyleConfig(\n      'Label',\n      { size },\n      pseudoSelectors,\n      internalStyles\n    )\n\n    return <Box is=\"label\" ref={ref} className={cx(themedClassName, className)} {...boxProps} {...restProps} />\n  })\n)\n\nLabel.propTypes = {\n  /**\n   * Label composes Box as the base.\n   */\n  ...Box.propTypes,\n\n  /**\n   * The size of the label.\n   */\n  size: PropTypes.oneOf([100, 200, 300, 400, 500, 600, 700, 800, 900])\n}\n\nexport default Label\n"]},"metadata":{},"sourceType":"module"}