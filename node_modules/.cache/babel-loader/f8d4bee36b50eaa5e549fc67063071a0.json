{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _excluded = [\"getTargetRef\", \"isShown\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { memo, useState, useEffect, useRef } from 'react';\nimport cx from 'classnames';\nimport { css as glamorCss } from 'glamor';\nimport debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport { Position } from '../../constants';\nimport { useId } from '../../hooks';\nimport { Positioner } from '../../positioner';\nimport TooltipStateless from './TooltipStateless';\nvar emptyProps = {};\nvar Tooltip = /*#__PURE__*/memo(function Tooltip(props) {\n  var _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      _props$position = props.position,\n      position = _props$position === void 0 ? Position.BOTTOM : _props$position,\n      content = props.content,\n      _props$hideDelay = props.hideDelay,\n      hideDelay = _props$hideDelay === void 0 ? 120 : _props$hideDelay,\n      _props$showDelay = props.showDelay,\n      showDelay = _props$showDelay === void 0 ? 0 : _props$showDelay,\n      propIsShown = props.isShown,\n      children = props.children,\n      _props$statelessProps = props.statelessProps,\n      statelessProps = _props$statelessProps === void 0 ? emptyProps : _props$statelessProps;\n  var id = useId('evergreen-tooltip');\n\n  var _useState = useState(propIsShown || false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isShown = _useState2[0],\n      setIsShown = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isShownByTarget = _useState4[0],\n      setIsShownByTarget = _useState4[1];\n\n  var closeTimer = useRef(undefined);\n\n  var mouseLeftTarget = function mouseLeftTarget() {\n    setIsShownByTarget(false);\n  };\n\n  var handleMouseLeaveTarget = debounce(mouseLeftTarget, hideDelay);\n\n  var hide = function hide() {\n    setIsShown(false); // Clean up any timeouts that may have been triggered from `showDelay`\n\n    clearTimeout(closeTimer.current);\n  };\n\n  var handleHide = debounce(hide, hideDelay); // Component will unmount\n\n  useEffect(function () {\n    return function () {\n      clearTimeout(closeTimer.current);\n    };\n  }, []);\n\n  var show = function show() {\n    if (isShown) return;\n\n    if (!showDelay) {\n      setIsShown(true);\n      return;\n    }\n\n    clearTimeout(closeTimer.current);\n    closeTimer.current = setTimeout(function () {\n      setIsShown(true);\n    }, showDelay);\n  };\n\n  var renderTarget = function renderTarget(_ref) {\n    var getRef = _ref.getRef;\n    var tooltipTargetProps = {\n      onMouseEnter: show,\n      onMouseLeave: handleHide,\n      'aria-describedby': id\n    };\n    /**\n     * Tooltips can be used within a Popover (not the other way around)\n     * When a Tooltip is used within a Popover, the Popover passes\n     * its props to the Tooltip in a `popoverProps` object.\n     */\n    // eslint-disable-next-line react/prop-types\n\n    if (props.popoverProps) {\n      var _props$popoverProps = props.popoverProps,\n          getTargetRef = _props$popoverProps.getTargetRef,\n          _isShown = _props$popoverProps.isShown,\n          popoverTargetProps = _objectWithoutProperties(_props$popoverProps, _excluded);\n\n      return /*#__PURE__*/React.cloneElement(children, _objectSpread(_objectSpread(_objectSpread({}, popoverTargetProps), tooltipTargetProps), {}, {\n        ref: function ref(_ref2) {\n          // Get the ref for the Tooltip.\n          getRef(_ref2); // Pass the ref to the Popover.\n\n          getTargetRef(_ref2);\n        }\n      }));\n    }\n    /**\n     * With normal usage only the props for a Tooltip are passed to the target.\n     */\n\n\n    return /*#__PURE__*/React.cloneElement(children, _objectSpread(_objectSpread({}, tooltipTargetProps), {}, {\n      ref: function ref(_ref3) {\n        getRef(_ref3);\n      }\n    }));\n  }; // eslint-disable-next-line react/prop-types\n\n\n  var isPopoverShown = function isPopoverShown() {\n    return props.popoverProps && props.popoverProps.isShown;\n  };\n\n  var handleMouseEnterTarget = function handleMouseEnterTarget() {\n    setIsShownByTarget(true);\n  };\n\n  var shown = (propIsShown || isShown || isShownByTarget) && !isPopoverShown(); // Tooltip was explicitly set to not be shown\n\n  if (propIsShown === false) {\n    shown = false;\n  }\n\n  return /*#__PURE__*/React.createElement(Positioner, {\n    target: renderTarget,\n    isShown: shown,\n    position: position,\n    animationDuration: 160\n  }, function (_ref4) {\n    var css = _ref4.css,\n        getRef = _ref4.getRef,\n        state = _ref4.state,\n        style = _ref4.style;\n    return /*#__PURE__*/React.createElement(TooltipStateless, _extends({\n      id: id,\n      appearance: appearance,\n      ref: getRef,\n      \"data-state\": state,\n      style: style,\n      onMouseEnter: handleMouseEnterTarget,\n      onMouseLeave: handleMouseLeaveTarget\n    }, statelessProps, {\n      className: cx(statelessProps.className, css ? glamorCss(css).toString() : undefined)\n    }), content);\n  });\n});\nTooltip.propTypes = {\n  /**\n   * The appearance of the tooltip.\n   */\n  appearance: PropTypes.oneOf(['default', 'card']),\n\n  /**\n   * The position the Popover is on.\n   */\n  position: PropTypes.oneOf([Position.TOP, Position.TOP_LEFT, Position.TOP_RIGHT, Position.BOTTOM, Position.BOTTOM_LEFT, Position.BOTTOM_RIGHT, Position.LEFT, Position.RIGHT]),\n\n  /**\n   * The content of the Popover.\n   */\n  content: PropTypes.node,\n\n  /**\n   * Time in ms before hiding the Tooltip.\n   */\n  hideDelay: PropTypes.number,\n\n  /**\n   * Time in ms before showing the Tooltip.\n   */\n  showDelay: PropTypes.number,\n\n  /**\n   * When True, manually show the Tooltip.\n   */\n  isShown: PropTypes.bool,\n\n  /**\n   * The target button of the Tooltip.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Properties passed through to the Tooltip.\n   */\n  statelessProps: PropTypes.object\n};\nexport default Tooltip;","map":{"version":3,"sources":["../../../src/tooltip/src/Tooltip.js"],"names":["css","emptyProps","Tooltip","memo","appearance","position","Position","content","hideDelay","showDelay","propIsShown","children","statelessProps","props","id","useId","isShown","setIsShown","useState","isShownByTarget","setIsShownByTarget","closeTimer","useRef","mouseLeftTarget","handleMouseLeaveTarget","debounce","hide","clearTimeout","handleHide","useEffect","show","setTimeout","renderTarget","getRef","tooltipTargetProps","onMouseEnter","onMouseLeave","getTargetRef","popoverTargetProps","ref","isPopoverShown","handleMouseEnterTarget","shown","state","style","cx","glamorCss","PropTypes","object"],"mappings":"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","sourcesContent":["import React, { memo, useState, useEffect, useRef } from 'react'\nimport cx from 'classnames'\nimport { css as glamorCss } from 'glamor'\nimport debounce from 'lodash.debounce'\nimport PropTypes from 'prop-types'\nimport { Position } from '../../constants'\nimport { useId } from '../../hooks'\nimport { Positioner } from '../../positioner'\nimport TooltipStateless from './TooltipStateless'\n\nconst emptyProps = {}\n\nconst Tooltip = memo(function Tooltip(props) {\n  const {\n    appearance = 'default',\n    position = Position.BOTTOM,\n    content,\n    hideDelay = 120,\n    showDelay = 0,\n    isShown: propIsShown,\n    children,\n    statelessProps = emptyProps\n  } = props\n\n  const id = useId('evergreen-tooltip')\n  const [isShown, setIsShown] = useState(propIsShown || false)\n  const [isShownByTarget, setIsShownByTarget] = useState(false)\n  const closeTimer = useRef(undefined)\n\n  const mouseLeftTarget = () => {\n    setIsShownByTarget(false)\n  }\n\n  const handleMouseLeaveTarget = debounce(mouseLeftTarget, hideDelay)\n\n  const hide = () => {\n    setIsShown(false)\n    // Clean up any timeouts that may have been triggered from `showDelay`\n    clearTimeout(closeTimer.current)\n  }\n\n  const handleHide = debounce(hide, hideDelay)\n\n  // Component will unmount\n  useEffect(\n    () => () => {\n      clearTimeout(closeTimer.current)\n    },\n    []\n  )\n\n  const show = () => {\n    if (isShown) return\n\n    if (!showDelay) {\n      setIsShown(true)\n      return\n    }\n\n    clearTimeout(closeTimer.current)\n    closeTimer.current = setTimeout(() => {\n      setIsShown(true)\n    }, showDelay)\n  }\n\n  const renderTarget = ({ getRef }) => {\n    const tooltipTargetProps = {\n      onMouseEnter: show,\n      onMouseLeave: handleHide,\n      'aria-describedby': id\n    }\n\n    /**\n     * Tooltips can be used within a Popover (not the other way around)\n     * When a Tooltip is used within a Popover, the Popover passes\n     * its props to the Tooltip in a `popoverProps` object.\n     */\n    // eslint-disable-next-line react/prop-types\n    if (props.popoverProps) {\n      const {\n        // eslint-disable-next-line react/prop-types\n        getTargetRef,\n        // eslint-disable-next-line react/prop-types\n        isShown,\n        ...popoverTargetProps\n        // eslint-disable-next-line react/prop-types\n      } = props.popoverProps\n\n      return React.cloneElement(children, {\n        // Add the Popover props to the target.\n        ...popoverTargetProps,\n        // Add the Tooltip props to the target.\n        ...tooltipTargetProps,\n\n        ref: ref => {\n          // Get the ref for the Tooltip.\n          getRef(ref)\n          // Pass the ref to the Popover.\n          getTargetRef(ref)\n        }\n      })\n    }\n\n    /**\n     * With normal usage only the props for a Tooltip are passed to the target.\n     */\n    return React.cloneElement(children, {\n      ...tooltipTargetProps,\n      ref: ref => {\n        getRef(ref)\n      }\n    })\n  }\n\n  // eslint-disable-next-line react/prop-types\n  const isPopoverShown = () => props.popoverProps && props.popoverProps.isShown\n\n  const handleMouseEnterTarget = () => {\n    setIsShownByTarget(true)\n  }\n\n  let shown = (propIsShown || isShown || isShownByTarget) && !isPopoverShown()\n\n  // Tooltip was explicitly set to not be shown\n  if (propIsShown === false) {\n    shown = false\n  }\n\n  return (\n    <Positioner target={renderTarget} isShown={shown} position={position} animationDuration={160}>\n      {({ css, getRef, state, style }) => (\n        <TooltipStateless\n          id={id}\n          appearance={appearance}\n          ref={getRef}\n          data-state={state}\n          style={style}\n          onMouseEnter={handleMouseEnterTarget}\n          onMouseLeave={handleMouseLeaveTarget}\n          {...statelessProps}\n          className={cx(statelessProps.className, css ? glamorCss(css).toString() : undefined)}\n        >\n          {content}\n        </TooltipStateless>\n      )}\n    </Positioner>\n  )\n})\n\nTooltip.propTypes = {\n  /**\n   * The appearance of the tooltip.\n   */\n  appearance: PropTypes.oneOf(['default', 'card']),\n\n  /**\n   * The position the Popover is on.\n   */\n  position: PropTypes.oneOf([\n    Position.TOP,\n    Position.TOP_LEFT,\n    Position.TOP_RIGHT,\n    Position.BOTTOM,\n    Position.BOTTOM_LEFT,\n    Position.BOTTOM_RIGHT,\n    Position.LEFT,\n    Position.RIGHT\n  ]),\n\n  /**\n   * The content of the Popover.\n   */\n  content: PropTypes.node,\n\n  /**\n   * Time in ms before hiding the Tooltip.\n   */\n  hideDelay: PropTypes.number,\n\n  /**\n   * Time in ms before showing the Tooltip.\n   */\n  showDelay: PropTypes.number,\n\n  /**\n   * When True, manually show the Tooltip.\n   */\n  isShown: PropTypes.bool,\n\n  /**\n   * The target button of the Tooltip.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Properties passed through to the Tooltip.\n   */\n  statelessProps: PropTypes.object\n}\n\nexport default Tooltip\n"]},"metadata":{},"sourceType":"module"}