{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\", \"className\", \"size\"],\n    _excluded2 = [\"className\"];\nimport React, { memo, forwardRef } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { useStyleConfig } from '../../hooks';\nvar pseudoSelectors = {\n  _child: '& > *',\n  _firstChild: '& > :first-child:not(:last-child)',\n  _middleChild: '& > :not(:first-child):not(:last-child)',\n  _lastChild: '& > :last-child:not(:first-child)'\n};\nvar internalStyles = {\n  display: 'inline-flex'\n};\n/**\n * Accessible `Group` component to identify a set of inputs/elements. Implements the WAI-ARIA Group Role\n * @see {@link https://www.w3.org/TR/wai-aria-1.1/#group}\n */\n\nvar Group = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Group(props, ref) {\n  var children = props.children,\n      className = props.className,\n      size = props.size,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var _useStyleConfig = useStyleConfig('Group', {\n    size: size\n  }, pseudoSelectors, internalStyles),\n      themedClassName = _useStyleConfig.className,\n      styleProps = _objectWithoutProperties(_useStyleConfig, _excluded2);\n\n  var enhancedChildren = React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return child;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      // Prefer more granularly defined props if present\n      size: child.props.size || size\n    });\n  });\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    className: cx(className, themedClassName),\n    role: \"group\",\n    ref: ref\n  }, styleProps, restProps), enhancedChildren);\n}));\nGroup.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Class name passed to the component.\n   * Only use if you know what you are doing.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The size passed down to children (for consistency)\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large'])\n};\nexport default Group;","map":{"version":3,"sources":["../../../src/group/src/Group.js"],"names":["pseudoSelectors","_child","_firstChild","_middleChild","_lastChild","internalStyles","display","Group","memo","forwardRef","children","className","size","restProps","props","themedClassName","styleProps","useStyleConfig","enhancedChildren","React","child","cx","ref","PropTypes"],"mappings":";;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,OAAA,EAAA,MAAA,YAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,GAAA,MAAA,QAAA;AACA,SAAA,cAAA,QAAA,aAAA;AAEA,IAAMA,eAAe,GAAG;AACtBC,EAAAA,MAAM,EADgB,OAAA;AAEtBC,EAAAA,WAAW,EAFW,mCAAA;AAGtBC,EAAAA,YAAY,EAHU,yCAAA;AAItBC,EAAAA,UAAU,EAAE;AAJU,CAAxB;AAOA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,OAAO,EAAE;AADY,CAAvB;AAIA;AACA;AACA;AACA;;AACA,IAAMC,KAAK,GAAA,aAAGC,IAAI,EAAA,aAChBC,UAAU,CAAC,SAAA,KAAA,CAAA,KAAA,EAAA,GAAA,EAA2B;AACpC,MAAQC,QAAR,GAAoDI,KAApD,CAAA,QAAA;AAAA,MAAkBH,SAAlB,GAAoDG,KAApD,CAAA,SAAA;AAAA,MAA6BF,IAA7B,GAAoDE,KAApD,CAAA,IAAA;AAAA,MAAsCD,SAAtC,GAAA,wBAAA,CAAA,KAAA,EAAA,SAAA,CAAA;;AAEA,MAAA,eAAA,GAAsDI,cAAc,CAAA,OAAA,EAElE;AAAEL,IAAAA,IAAI,EAAJA;AAAF,GAFkE,EAAA,eAAA,EAApE,cAAoE,CAApE;AAAA,MAAmBG,eAAnB,GAAA,eAAA,CAAA,SAAA;AAAA,MAAuCC,UAAvC,GAAA,wBAAA,CAAA,eAAA,EAAA,UAAA,CAAA;;AAOA,MAAME,gBAAgB,GAAG,KAAK,CAAL,QAAA,CAAA,GAAA,CAAA,QAAA,EAA6B,UAAA,KAAA,EAAS;AAC7D,QAAI,EAAA,aAACC,KAAK,CAALA,cAAAA,CAAL,KAAKA,CAAL,EAAkC;AAChC,aAAA,KAAA;AACD;;AAED,WAAA,aAAO,KAAK,CAAL,YAAA,CAAA,KAAA,EAA0B;AAC/B;AACAP,MAAAA,IAAI,EAAEQ,KAAK,CAALA,KAAAA,CAAAA,IAAAA,IAAoBR;AAFK,KAA1B,CAAP;AALF,GAAyB,CAAzB;AAWA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA;AAAK,IAAA,SAAS,EAAES,EAAE,CAAA,SAAA,EAAlB,eAAkB,CAAlB;AAAgD,IAAA,IAAI,EAApD,OAAA;AAA6D,IAAA,GAAG,EAAEC;AAAlE,GAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EADF,gBACE,CADF;AAtBJ,CACY,CADM,CAAlB;AA8BAf,KAAK,CAALA,SAAAA,GAAkB;AAChBG,EAAAA,QAAQ,EAAEa,SAAS,CAATA,IAAAA,CADM,UAAA;;AAGhB;AACF;AACA;AACA;AACEZ,EAAAA,SAAS,EAAEY,SAAS,CAPJ,MAAA;;AAShB;AACF;AACA;AACEX,EAAAA,IAAI,EAAEW,SAAS,CAATA,KAAAA,CAAgB,CAAA,OAAA,EAAA,QAAA,EAAhBA,OAAgB,CAAhBA;AAZU,CAAlBhB;AAeA,eAAA,KAAA","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport Box from 'ui-box'\nimport { useStyleConfig } from '../../hooks'\n\nconst pseudoSelectors = {\n  _child: '& > *',\n  _firstChild: '& > :first-child:not(:last-child)',\n  _middleChild: '& > :not(:first-child):not(:last-child)',\n  _lastChild: '& > :last-child:not(:first-child)'\n}\n\nconst internalStyles = {\n  display: 'inline-flex'\n}\n\n/**\n * Accessible `Group` component to identify a set of inputs/elements. Implements the WAI-ARIA Group Role\n * @see {@link https://www.w3.org/TR/wai-aria-1.1/#group}\n */\nconst Group = memo(\n  forwardRef(function Group(props, ref) {\n    const { children, className, size, ...restProps } = props\n\n    const { className: themedClassName, ...styleProps } = useStyleConfig(\n      'Group',\n      { size },\n      pseudoSelectors,\n      internalStyles\n    )\n\n    const enhancedChildren = React.Children.map(children, child => {\n      if (!React.isValidElement(child)) {\n        return child\n      }\n\n      return React.cloneElement(child, {\n        // Prefer more granularly defined props if present\n        size: child.props.size || size\n      })\n    })\n\n    return (\n      <Box className={cx(className, themedClassName)} role=\"group\" ref={ref} {...styleProps} {...restProps}>\n        {enhancedChildren}\n      </Box>\n    )\n  })\n)\n\nGroup.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Class name passed to the component.\n   * Only use if you know what you are doing.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The size passed down to children (for consistency)\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large'])\n}\n\nexport default Group\n"]},"metadata":{},"sourceType":"module"}