{"ast":null,"code":"import { MimeType } from '../../../constants';\n/**\n * Returns the corresponding file extension from the provided MimeType.\n * @param {string} mimeType\n * @returns {string | undefined} Mapped file extension from the MimeType, or `undefined` if not found\n */\n\nvar mimeTypeToExtension = function mimeTypeToExtension(mimeType) {\n  var keys = Object.keys(MimeType);\n  var key = keys.find(function (key) {\n    return MimeType[key] === mimeType;\n  });\n\n  if (key == null) {\n    return undefined;\n  }\n\n  return \".\".concat(key);\n};\n\nexport default mimeTypeToExtension;","map":{"version":3,"sources":["../../../../src/file-uploader/src/utils/mime-type-to-extension.js"],"names":["mimeTypeToExtension","keys","Object","key","MimeType"],"mappings":"AAAA,SAAA,QAAA,QAAA,oBAAA;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAA,QAAA,EAAY;AACtC,MAAMC,IAAI,GAAGC,MAAM,CAANA,IAAAA,CAAb,QAAaA,CAAb;AACA,MAAMC,GAAG,GAAG,IAAI,CAAJ,IAAA,CAAU,UAAA,GAAA,EAAG;AAAA,WAAIC,QAAQ,CAARA,GAAQ,CAARA,KAAJ,QAAA;AAAzB,GAAY,CAAZ;;AAEA,MAAID,GAAG,IAAP,IAAA,EAAiB;AACf,WAAA,SAAA;AACD;;AAED,SAAA,IAAA,MAAA,CAAA,GAAA,CAAA;AARF,CAAA;;AAWA,eAAA,mBAAA","sourcesContent":["import { MimeType } from '../../../constants'\n\n/**\n * Returns the corresponding file extension from the provided MimeType.\n * @param {string} mimeType\n * @returns {string | undefined} Mapped file extension from the MimeType, or `undefined` if not found\n */\nconst mimeTypeToExtension = mimeType => {\n  const keys = Object.keys(MimeType)\n  const key = keys.find(key => MimeType[key] === mimeType)\n\n  if (key == null) {\n    return undefined\n  }\n\n  return `.${key}`\n}\n\nexport default mimeTypeToExtension\n"]},"metadata":{},"sourceType":"module"}