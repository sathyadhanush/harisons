{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _excluded = [\"isSelected\", \"onPageChange\", \"page\"],\n    _excluded2 = [\"onNextPage\", \"onPageChange\", \"onPreviousPage\", \"page\", \"totalPages\"];\nimport React, { useState, useCallback, useMemo, memo, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, IconButton } from '../../buttons';\nimport { ChevronLeftIcon, ChevronRightIcon } from '../../icons';\nimport { Pane } from '../../layers';\nimport { majorScale, minorScale } from '../../scales';\nimport { useTheme } from '../../theme';\nimport { Text } from '../../typography';\nexport var usePaginationBehavior = function usePaginationBehavior() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$page = _ref.page,\n      inputPage = _ref$page === void 0 ? 1 : _ref$page;\n\n  var _useState = useState(inputPage),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var onNextPage = useCallback(function () {\n    setPage(function (page) {\n      return page + 1;\n    });\n  }, []);\n  var onPreviousPage = useCallback(function () {\n    setPage(function (page) {\n      return page - 1;\n    });\n  }, []);\n  var onPageChange = useCallback(function (index) {\n    setPage(index);\n  }, []);\n  return {\n    page: page,\n    onNextPage: onNextPage,\n    onPageChange: onPageChange,\n    onPreviousPage: onPreviousPage\n  };\n};\nvar MAX_HANDLES_TO_SHOW = 7;\n/* eslint-disable react/prop-types */\n\nvar PaginationButton = function PaginationButton(_ref2) {\n  var isSelected = _ref2.isSelected,\n      onPageChange = _ref2.onPageChange,\n      page = _ref2.page,\n      rest = _objectWithoutProperties(_ref2, _excluded);\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var isEllipsis = typeof page === 'string' && page === '...';\n  var selectedProps = useMemo(function () {\n    if (isSelected) {\n      return {\n        backgroundColor: colors.blue50,\n        color: colors.blue400\n      };\n    } else {\n      return {};\n    }\n  }, [isSelected, colors]);\n  var onClick = useCallback(function () {\n    onPageChange(page);\n  }, [page, onPageChange]);\n\n  if (isEllipsis) {\n    return /*#__PURE__*/React.createElement(Text, {\n      paddingX: majorScale(1),\n      paddingY: majorScale(1),\n      minWidth: majorScale(4),\n      textAlign: \"center\",\n      \"aria-label\": \"Pagination overflow\"\n    }, page);\n  }\n\n  return /*#__PURE__*/React.createElement(Button, _extends({\n    \"aria-current\": isSelected,\n    \"aria-label\": \"Page \".concat(page),\n    onClick: onClick,\n    minWidth: majorScale(4),\n    paddingX: majorScale(1)\n  }, rest, selectedProps));\n};\n\nPaginationButton.displayName = \"PaginationButton\";\n/* eslint-enable react/prop-types */\n\nvar range = function range(start, stop) {\n  var output = [];\n\n  for (var i = start; i <= stop; i++) {\n    output.push(i);\n  }\n\n  return output;\n};\n\nvar getPaginationButtonContent = function getPaginationButtonContent(_ref3) {\n  var page = _ref3.page,\n      totalPages = _ref3.totalPages;\n\n  if (totalPages <= MAX_HANDLES_TO_SHOW) {\n    return range(1, totalPages);\n  }\n\n  if (totalPages > MAX_HANDLES_TO_SHOW && page <= 4) {\n    return [].concat(_toConsumableArray(range(1, 5)), ['...', totalPages]);\n  }\n\n  if (totalPages - page < 4) {\n    return [1, '...'].concat(_toConsumableArray(range(totalPages - 4, totalPages)));\n  }\n\n  return [1, '...'].concat(_toConsumableArray(range(page - 1, page + 1)), ['...', totalPages]);\n};\n\nvar noop = function noop() {};\n\nvar Pagination = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function Pagination(_ref4, ref) {\n  var _ref4$onNextPage = _ref4.onNextPage,\n      onNextPage = _ref4$onNextPage === void 0 ? noop : _ref4$onNextPage,\n      _ref4$onPageChange = _ref4.onPageChange,\n      onPageChange = _ref4$onPageChange === void 0 ? noop : _ref4$onPageChange,\n      _ref4$onPreviousPage = _ref4.onPreviousPage,\n      onPreviousPage = _ref4$onPreviousPage === void 0 ? noop : _ref4$onPreviousPage,\n      _ref4$page = _ref4.page,\n      page = _ref4$page === void 0 ? 1 : _ref4$page,\n      totalPages = _ref4.totalPages,\n      rest = _objectWithoutProperties(_ref4, _excluded2);\n\n  return /*#__PURE__*/React.createElement(Pane, _extends({\n    is: \"nav\",\n    role: \"navigation\",\n    \"aria-label\": \"Pagination\"\n  }, rest, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(Pane, {\n    is: \"ul\",\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: 0\n  }, /*#__PURE__*/React.createElement(Pane, {\n    is: \"li\",\n    listStyle: \"none\"\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    appearance: \"minimal\",\n    icon: ChevronLeftIcon,\n    disabled: page === 1,\n    onClick: onPreviousPage\n  })), totalPages ? getPaginationButtonContent({\n    totalPages: totalPages,\n    page: page\n  }).map(function (val, i) {\n    var isSelected = val === page;\n    return /*#__PURE__*/React.createElement(Pane, {\n      is: \"li\",\n      listStyle: \"none\",\n      key: \"\".concat(val, \"-\").concat(i)\n    }, /*#__PURE__*/React.createElement(PaginationButton, {\n      appearance: \"minimal\",\n      isSelected: isSelected,\n      page: val,\n      onPageChange: onPageChange,\n      marginX: minorScale(1) / 2\n    }, val));\n  }) : null, /*#__PURE__*/React.createElement(Pane, {\n    is: \"li\",\n    listStyle: \"none\"\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    appearance: \"minimal\",\n    icon: ChevronRightIcon,\n    disabled: totalPages ? page === totalPages : undefined,\n    onClick: onNextPage\n  }))));\n}));\nPagination.propTypes = {\n  /**\n   * The current page that a user is on - defaults to 1.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The total number of pages to render. If ommitted, the page numbers will not be shown to the end user.\n   */\n  totalPages: PropTypes.number,\n\n  /**\n   * Callback handler when the next page button is clicked.\n   */\n  onNextPage: PropTypes.func,\n\n  /**\n   * Callback handler when the previous page button is clicked.\n   */\n  onPreviousPage: PropTypes.func,\n\n  /**\n   * Callback handler when a specific page # is clicked\n   */\n  onPageChange: PropTypes.func\n};\nexport default Pagination;","map":{"version":3,"sources":["../../../src/pagination/src/Pagination.js"],"names":["usePaginationBehavior","page","inputPage","setPage","useState","onNextPage","useCallback","onPreviousPage","onPageChange","MAX_HANDLES_TO_SHOW","PaginationButton","isSelected","rest","colors","useTheme","isEllipsis","selectedProps","useMemo","backgroundColor","color","blue400","onClick","majorScale","range","output","i","getPaginationButtonContent","totalPages","noop","Pagination","memo","forwardRef","ref","val","minorScale","PropTypes","func"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo, memo, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, IconButton } from '../../buttons'\nimport { ChevronLeftIcon, ChevronRightIcon } from '../../icons'\nimport { Pane } from '../../layers'\nimport { majorScale, minorScale } from '../../scales'\nimport { useTheme } from '../../theme'\nimport { Text } from '../../typography'\n\nexport const usePaginationBehavior = ({ page: inputPage = 1 } = {}) => {\n  const [page, setPage] = useState(inputPage)\n\n  const onNextPage = useCallback(() => {\n    setPage(page => page + 1)\n  }, [])\n\n  const onPreviousPage = useCallback(() => {\n    setPage(page => page - 1)\n  }, [])\n\n  const onPageChange = useCallback(index => {\n    setPage(index)\n  }, [])\n\n  return {\n    page,\n    onNextPage,\n    onPageChange,\n    onPreviousPage\n  }\n}\n\nconst MAX_HANDLES_TO_SHOW = 7\n\n/* eslint-disable react/prop-types */\nconst PaginationButton = ({ isSelected, onPageChange, page, ...rest }) => {\n  const { colors } = useTheme()\n  const isEllipsis = typeof page === 'string' && page === '...'\n  const selectedProps = useMemo(() => {\n    if (isSelected) {\n      return {\n        backgroundColor: colors.blue50,\n        color: colors.blue400\n      }\n    } else {\n      return {}\n    }\n  }, [isSelected, colors])\n\n  const onClick = useCallback(() => {\n    onPageChange(page)\n  }, [page, onPageChange])\n\n  if (isEllipsis) {\n    return (\n      <Text\n        paddingX={majorScale(1)}\n        paddingY={majorScale(1)}\n        minWidth={majorScale(4)}\n        textAlign=\"center\"\n        aria-label=\"Pagination overflow\"\n      >\n        {page}\n      </Text>\n    )\n  }\n\n  return (\n    <Button\n      aria-current={isSelected}\n      aria-label={`Page ${page}`}\n      onClick={onClick}\n      minWidth={majorScale(4)}\n      paddingX={majorScale(1)}\n      {...rest}\n      {...selectedProps}\n    />\n  )\n}\n/* eslint-enable react/prop-types */\n\nconst range = (start, stop) => {\n  const output = []\n  for (let i = start; i <= stop; i++) {\n    output.push(i)\n  }\n\n  return output\n}\n\nconst getPaginationButtonContent = ({ page, totalPages }) => {\n  if (totalPages <= MAX_HANDLES_TO_SHOW) {\n    return range(1, totalPages)\n  }\n\n  if (totalPages > MAX_HANDLES_TO_SHOW && page <= 4) {\n    return [...range(1, 5), '...', totalPages]\n  }\n\n  if (totalPages - page < 4) {\n    return [1, '...', ...range(totalPages - 4, totalPages)]\n  }\n\n  return [1, '...', ...range(page - 1, page + 1), '...', totalPages]\n}\n\nconst noop = () => {}\n\nconst Pagination = memo(\n  forwardRef(function Pagination(\n    { onNextPage = noop, onPageChange = noop, onPreviousPage = noop, page = 1, totalPages, ...rest },\n    ref\n  ) {\n    return (\n      <Pane is=\"nav\" role=\"navigation\" aria-label=\"Pagination\" {...rest} ref={ref}>\n        <Pane is=\"ul\" display=\"flex\" alignItems=\"center\" padding={0}>\n          <Pane is=\"li\" listStyle=\"none\">\n            <IconButton appearance=\"minimal\" icon={ChevronLeftIcon} disabled={page === 1} onClick={onPreviousPage} />\n          </Pane>\n          {totalPages\n            ? getPaginationButtonContent({ totalPages, page }).map((val, i) => {\n                const isSelected = val === page\n\n                return (\n                  <Pane is=\"li\" listStyle=\"none\" key={`${val}-${i}`}>\n                    <PaginationButton\n                      appearance=\"minimal\"\n                      isSelected={isSelected}\n                      page={val}\n                      onPageChange={onPageChange}\n                      marginX={minorScale(1) / 2}\n                    >\n                      {val}\n                    </PaginationButton>\n                  </Pane>\n                )\n              })\n            : null}\n          <Pane is=\"li\" listStyle=\"none\">\n            <IconButton\n              appearance=\"minimal\"\n              icon={ChevronRightIcon}\n              disabled={totalPages ? page === totalPages : undefined}\n              onClick={onNextPage}\n            />\n          </Pane>\n        </Pane>\n      </Pane>\n    )\n  })\n)\n\nPagination.propTypes = {\n  /**\n   * The current page that a user is on - defaults to 1.\n   */\n  page: PropTypes.number.isRequired,\n  /**\n   * The total number of pages to render. If ommitted, the page numbers will not be shown to the end user.\n   */\n  totalPages: PropTypes.number,\n  /**\n   * Callback handler when the next page button is clicked.\n   */\n  onNextPage: PropTypes.func,\n  /**\n   * Callback handler when the previous page button is clicked.\n   */\n  onPreviousPage: PropTypes.func,\n  /**\n   * Callback handler when a specific page # is clicked\n   */\n  onPageChange: PropTypes.func\n}\n\nexport default Pagination\n"]},"metadata":{},"sourceType":"module"}