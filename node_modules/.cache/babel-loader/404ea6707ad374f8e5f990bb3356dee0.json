{"ast":null,"code":"var previousOverflow = [];\nvar previousPaddingRight = [];\n/**\n * Toggle the body scroll / overflow and additional styling\n * necessary to preserve scroll position and body width (scrollbar replacement)\n *\n * @param {boolean} preventScroll - whether or not to prevent body scrolling\n */\n\nexport default function preventBodyScroll(preventScroll) {\n  /** Get the width before toggling the style so we can calculate the scrollbar width for a smooth, jankless style change */\n  var _document$body$getBou = document.body.getBoundingClientRect(),\n      width = _document$body$getBou.width;\n  /** Apply or remove overflow style */\n\n\n  if (preventScroll) {\n    previousOverflow.push(document.body.style.overflow);\n    document.body.style.overflow = 'hidden';\n  } else {\n    document.body.style.overflow = previousOverflow.pop() || '';\n  }\n  /** Get the _new width_ of the body (this will tell us the scrollbar width) */\n\n\n  var newWidth = document.body.getBoundingClientRect().width;\n  var scrollBarWidth = newWidth - width;\n  /** If there's a diff due to scrollbars, then account for it with padding */\n\n  if (preventScroll) {\n    previousPaddingRight.push(document.body.style.paddingRight);\n    document.body.style.paddingRight = Math.max(0, scrollBarWidth || 0) + 'px';\n  } else {\n    document.body.style.paddingRight = previousPaddingRight.pop() || '';\n  }\n}","map":{"version":3,"sources":["../../src/lib/prevent-body-scroll.js"],"names":["previousOverflow","previousPaddingRight","width","document","newWidth","scrollBarWidth","Math"],"mappings":"AAAA,IAAMA,gBAAgB,GAAtB,EAAA;AACA,IAAMC,oBAAoB,GAA1B,EAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAAA,iBAAA,CAAA,aAAA,EAA0C;AACvD;AACA,MAAA,qBAAA,GAAkBE,QAAQ,CAARA,IAAAA,CAAlB,qBAAkBA,EAAlB;AAAA,MAAQD,KAAR,GAAA,qBAAA,CAAA,KAAA;AAEA;;;AACA,MAAA,aAAA,EAAmB;AACjBF,IAAAA,gBAAgB,CAAhBA,IAAAA,CAAsBG,QAAQ,CAARA,IAAAA,CAAAA,KAAAA,CAAtBH,QAAAA;AACAG,IAAAA,QAAQ,CAARA,IAAAA,CAAAA,KAAAA,CAAAA,QAAAA,GAAAA,QAAAA;AAFF,GAAA,MAGO;AACLA,IAAAA,QAAQ,CAARA,IAAAA,CAAAA,KAAAA,CAAAA,QAAAA,GAA+BH,gBAAgB,CAAhBA,GAAAA,MAA/BG,EAAAA;AACD;AAED;;;AACA,MAAMC,QAAQ,GAAGD,QAAQ,CAARA,IAAAA,CAAAA,qBAAAA,GAAjB,KAAA;AACA,MAAME,cAAc,GAAGD,QAAQ,GAA/B,KAAA;AAEA;;AACA,MAAA,aAAA,EAAmB;AACjBH,IAAAA,oBAAoB,CAApBA,IAAAA,CAA0BE,QAAQ,CAARA,IAAAA,CAAAA,KAAAA,CAA1BF,YAAAA;AACAE,IAAAA,QAAQ,CAARA,IAAAA,CAAAA,KAAAA,CAAAA,YAAAA,GAAmCG,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAYD,cAAc,IAA1BC,CAAAA,IAAnCH,IAAAA;AAFF,GAAA,MAGO;AACLA,IAAAA,QAAQ,CAARA,IAAAA,CAAAA,KAAAA,CAAAA,YAAAA,GAAmCF,oBAAoB,CAApBA,GAAAA,MAAnCE,EAAAA;AACD;AACF","sourcesContent":["const previousOverflow = []\nconst previousPaddingRight = []\n\n/**\n * Toggle the body scroll / overflow and additional styling\n * necessary to preserve scroll position and body width (scrollbar replacement)\n *\n * @param {boolean} preventScroll - whether or not to prevent body scrolling\n */\nexport default function preventBodyScroll(preventScroll) {\n  /** Get the width before toggling the style so we can calculate the scrollbar width for a smooth, jankless style change */\n  const { width } = document.body.getBoundingClientRect()\n\n  /** Apply or remove overflow style */\n  if (preventScroll) {\n    previousOverflow.push(document.body.style.overflow)\n    document.body.style.overflow = 'hidden'\n  } else {\n    document.body.style.overflow = previousOverflow.pop() || ''\n  }\n\n  /** Get the _new width_ of the body (this will tell us the scrollbar width) */\n  const newWidth = document.body.getBoundingClientRect().width\n  const scrollBarWidth = newWidth - width\n\n  /** If there's a diff due to scrollbars, then account for it with padding */\n  if (preventScroll) {\n    previousPaddingRight.push(document.body.style.paddingRight)\n    document.body.style.paddingRight = Math.max(0, scrollBarWidth || 0) + 'px'\n  } else {\n    document.body.style.paddingRight = previousPaddingRight.pop() || ''\n  }\n}\n"]},"metadata":{},"sourceType":"module"}